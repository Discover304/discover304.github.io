<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ⅹ. Harbor</title>
  <icon>https://www.gravatar.com/avatar/ab3d855fe5c65deed5c8f765972aac7c</icon>
  
  <link href="https://discover304.top/atom.xml" rel="self"/>
  
  <link href="https://discover304.top/"/>
  <updated>2024-08-20T18:49:52.354Z</updated>
  <id>https://discover304.top/</id>
  
  <author>
    <name>✨白拾ShiroX✨</name>
    <email>hobart.yang@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Introduction to Image Processing With Scikit-Image</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-6/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-6/</id>
    <published>2024-08-20T14:11:23.000Z</published>
    <updated>2024-08-20T18:49:52.354Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><strong>Introduction</strong></p><p>In the vast field of data science, image processing has carved out a significant niche, providing tools and techniques to analyze and manipulate visual data. Python, with its rich ecosystem of libraries, offers several options for working with images. Among these, scikit-image stands out as a powerful, accessible tool dedicated to image processing, using NumPy arrays as image objects for easy integration with other scientific Python libraries.</p><p>In this post, we’ll explore how to use scikit-image to read images into NumPy arrays and visualize them using Matplotlib, illustrating the basics with a simple example.</p><p><strong>Getting Started with scikit-image</strong></p><p>Scikit-image is built on NumPy and Matplotlib, making it a great choice for tasks that require manipulation and analysis of pixels. Let’s start by reading and displaying an image.</p><p><strong>Reading and Displaying an Image</strong></p><p>Here’s how you can read and display an image with scikit-image:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> skimage <span class="keyword">import</span> data</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load an example image from scikit-image&#x27;s data module</span></span><br><span class="line">img = data.astronaut()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the image</span></span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>This code snippet loads an example image (an astronaut) from scikit-image’s extensive collection of demo images and displays it using Matplotlib’s <code>imshow</code> function.</p><p><strong>Exploring Image Properties</strong></p><p>Understanding an image’s properties is essential for processing tasks. Here’s how you can examine basic properties like size and color channels:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dimension of image: pixels in (rows, columns)</span></span><br><span class="line">img_size = img.shape</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Size of image: \n&#123;&#125; \n&#x27;</span>.<span class="built_in">format</span>(img_size))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extract dimensions</span></span><br><span class="line">dim1, dim2 = img.shape[<span class="number">0</span>], img.shape[<span class="number">1</span>]</span><br><span class="line">num_channels = img.shape[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># RGB Colour image has three channels: Red, Green, Blue</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;No. of channels: \n&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(num_channels))</span><br></pre></td></tr></table></figure><p>This will output the dimensions of the image and the number of color channels, which is crucial for further manipulation, such as filtering, resizing, or color adjustments.</p><p><strong>Additional Tips</strong></p><p>While we used a built-in image for simplicity, scikit-image can load images from any URL using the <code>io</code> module, as shown below:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> skimage <span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line"><span class="comment"># Importing an image from a URL</span></span><br><span class="line">img = io.imread(<span class="string">&#x27;url_here&#x27;</span>)</span><br></pre></td></tr></table></figure><p>This flexibility makes scikit-image a handy tool for working with a vast range of image data sources.</p><p><strong>Conclusion</strong></p><p>Scikit-image paired with Matplotlib provides a robust set of tools for image processing tasks in Python. Whether you’re a beginner looking to understand the basics of image data or an advanced user working on complex image analysis projects, scikit-image offers the functions and simplicity required to accomplish these tasks efficiently.</p><p>By learning how to manipulate images using these libraries, you can unlock a deeper understanding of image analysis techniques and their applications in real-world scenarios.</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><strong>简介</strong></p><p>在数据科学的广阔领域中，图像处理占据了重要的一席之地，为分析和处理视觉数据提供了各种工具和技术。Python 拥有丰富的库生态系统，为图像处理提供了多种选择，其中，scikit-image 凭借其强大且易用的功能脱颖而出。它使用 NumPy 数组作为图像对象，方便与其他科学 Python 库集成。</p><p>在这篇文章中，我们将探索如何使用 scikit-image 将图像读取到 NumPy 数组并使用 Matplotlib 进行可视化，通过一个简单的例子来说明基本原理。</p><p><strong>scikit-image 入门</strong></p><p>Scikit-image 基于 NumPy 和 Matplotlib 构建，非常适合需要操作和分析像素的任务。让我们从读取和显示图像开始。</p><p><strong>读取和显示图像</strong></p><p>以下是使用 scikit-image 读取和显示图像的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> skimage <span class="keyword">import</span> data</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 scikit-image 的数据模块加载一个示例图像</span></span><br><span class="line">img = data.astronaut()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>这个代码段加载了 scikit-image 的示例图像集中的一个宇航员图像，并使用 Matplotlib 的 <code>imshow</code> 函数显示出来。</p><p><strong>探索图像属性</strong></p><p>了解图像的属性对于处理任务至关重要。以下是检查图像基本属性（如大小和颜色通道）的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图像的尺寸：像素（行数，列数）</span></span><br><span class="line">img_size = img.shape</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;图像大小: \n&#123;&#125; \n&#x27;</span>.<span class="built_in">format</span>(img_size))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取尺寸</span></span><br><span class="line">dim1, dim2 = img.shape[<span class="number">0</span>], img.shape[<span class="number">1</span>]</span><br><span class="line">num_channels = img.shape[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># RGB 彩色图像有三个通道：红色、绿色、蓝色</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;通道数: \n&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(num_channels))</span><br></pre></td></tr></table></figure><p>这将输出图像的维度和颜色通道数，对于后续操作（如滤波、调整大小或颜色调整）非常重要。</p><p><strong>额外提示</strong></p><p>虽然我们为了简便使用了内置图像，scikit-image 还可以通过 <code>io</code> 模块从任何 URL 加载图像，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> skimage <span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 URL 导入图像</span></span><br><span class="line">img = io.imread(<span class="string">&#x27;url_here&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这种灵活性使 scikit-image 成为处理各种图像数据源的得力工具。</p><p><strong>结论</strong></p><p>Scikit-image 与 Matplotlib 搭配，为 Python 中的图像处理任务提供了一套强大的工具。无论你是希望理解图像数据基础的新手，还是从事复杂图像分析项目的高级用户，scikit-image 都提供了实现这些任务所需的功能和简洁性。</p><p>通过学习如何使用这些库操作图像，你可以更深入地理解图像分析技术及其在现实世界中的应用。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="PythonNote" scheme="https://discover304.top/categories/NoteBook/PythonNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="Data Science" scheme="https://discover304.top/tags/Data-Science/"/>
    
    <category term="scikit-image" scheme="https://discover304.top/tags/scikit-image/"/>
    
    <category term="Image Processing" scheme="https://discover304.top/tags/Image-Processing/"/>
    
  </entry>
  
  <entry>
    <title>Understanding the Anatomy of a Matplotlib Figure</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-5/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-5/</id>
    <published>2024-08-20T14:11:20.000Z</published>
    <updated>2024-08-20T18:49:50.658Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><strong>Introduction</strong></p><p>Matplotlib is one of the most popular Python libraries for data visualization. It provides an extensive range of tools to plot graphs that are highly customizable and suitable for a wide array of applications. Whether you are a data scientist, an engineer, or anyone who deals with graphical representations of data, understanding how to manipulate and customize your plots in Matplotlib can greatly enhance your ability to communicate data insights effectively.</p><p>In this post, we will explore the structure of a Matplotlib figure, breaking down its components and explaining each part’s role in creating a visualization.</p><p><strong>Key Components of a Matplotlib Figure</strong></p><p>A Matplotlib visualization is made up of several interlinked elements, and understanding these is crucial for effective plot customization. Here’s an overview of the essential parts:</p><ol><li><p><strong>Figure</strong></p><p>The entire window or the page the plot is drawn on. Think of it as the canvas of your artwork. It is the top-level container for all the plot elements. A single figure can contain any number of Axes.</p></li><li><p><strong>Axes</strong></p><p>This is what you might think of as ‘a plot.’ An Axes is an individual plot or graph. Despite the name, a single Axes object can have multiple plot types layered on top of each other. Each Axes has an X-Axis and a Y-Axis (and a Z-Axis in case of 3D). These contain the ticks, tick locations, labels, etc., that frame the plot. The Axes contains two (or three) Axis objects which handle the data limits.</p></li><li><p><strong>Axis</strong></p><p>These are the number line-like objects that control the graph limits, the ticks (the marks on the Axis), and the labels on these ticks. They are responsible for generating the graph limits and organizing the tick marks.</p></li><li><p><strong>Artist</strong></p><p>Everything you can see on the figure is an artist, including Text objects, Line2D objects, collection objects, and even the Axes and Figure objects themselves. In essence, all visible elements in the plot are collectively referred to as artists.</p></li></ol><p><strong>The Roles Each Component Plays</strong></p><p>Understanding each component’s role can help you manipulate and utilize them effectively to create complex and detailed visualizations.</p><ul><li><strong>Figure</strong>: Manages the outer framework of the plot including the canvas background, and acts as a container for one or more Axes.</li><li><strong>Axes</strong>: Hosts the plot elements and provides the interface for plotting. It is where most of the Matplotlib API plotting methods are applied.</li><li><strong>Axis</strong>: Manages the scale and limits of the data being plotted, including ticks and tick labels.</li><li><strong>Artist</strong>: The visible elements that are drawn onto the canvas.</li></ul><p><strong>Putting It All Together</strong></p><p>To see these components in action, here’s a quick example using Python and Matplotlib:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a Figure</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add Axes to the Figure</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)  <span class="comment"># 111 means &quot;1x1 grid, first subplot&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot data</span></span><br><span class="line">ax.plot([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">10</span>], [<span class="number">10</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">40</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Customize the Axis</span></span><br><span class="line">ax.set_xlim(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>, <span class="number">50</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;X Axis Label&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Y Axis Label&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;Sample Plot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show the plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><strong>Conclusion</strong></p><p>The ability to understand and manipulate the components of a Matplotlib figure is crucial for anyone looking to create detailed and specific graphical data representations. Each element of a Matplotlib plot serves a specific purpose, and knowing how these work together allows for better control over the appearance and behavior of your plots. By mastering the structure of Matplotlib figures, you can make your data visualization tasks much more intuitive and effective.</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><strong>介绍</strong></p><p>Matplotlib 是 Python 中最流行的数据可视化库之一。它提供了一系列丰富的工具，可以绘制高度自定义且适用于各种应用场景的图表。无论你是数据科学家、工程师，还是需要处理数据图形表示的任何人，理解如何操作和定制 Matplotlib 中的图表可以极大地提升你传达数据洞察的能力。</p><p>在这篇文章中，我们将探讨 Matplotlib 图像的结构，分解其组成部分，并解释每个部分在创建可视化图表中所起的作用。</p><p><strong>Matplotlib 图像的关键组成部分</strong></p><p>一个 Matplotlib 可视化由多个互相关联的元素组成，理解这些元素对于有效地定制图表至关重要。以下是一些主要部分的概述：</p><ol><li><p><strong>Figure（图像）</strong></p><p>整个窗口或绘制图表的页面。可以将其视为你作品的画布。它是所有图表元素的顶级容器。一个 Figure 可以包含任意数量的 Axes（子图）。</p></li><li><p><strong>Axes（子图）</strong></p><p>这就是通常你认为的“一个图表”。Axes 是一个独立的绘图或图表。尽管名称为“Axes”，但一个 Axes 对象可以叠加多种图表类型。每个 Axes 具有一个 X 轴和一个 Y 轴（对于 3D 图表则还有 Z 轴）。这些轴包含刻度、刻度位置、标签等，构成了图表的框架。Axes 包含两个（或三个）Axis 对象，负责处理数据范围。</p></li><li><p><strong>Axis（轴）</strong></p><p>这些是控制图表范围、刻度（轴上的标记）以及刻度标签的对象。它们负责生成图表的范围并组织刻度标记。</p></li><li><p><strong>Artist（艺术家）</strong></p><p>图像中所有可见的内容都是一个 Artist，包括文本对象、Line2D 对象、集合对象，甚至 Axes 和 Figure 对象本身。实质上，图表中所有可见元素统称为艺术家。</p></li></ol><p><strong>各个组成部分的作用</strong></p><p>理解每个组件的作用有助于你有效地操作和利用它们，创建复杂而详细的可视化图表。</p><ul><li><strong>Figure</strong>：管理图表的外部框架，包括画布背景，并充当一个或多个 Axes 的容器。</li><li><strong>Axes</strong>：承载绘图元素，并提供绘图接口。大部分 Matplotlib API 的绘图方法都应用在这里。</li><li><strong>Axis</strong>：管理绘制数据的比例和范围，包括刻度和刻度标签。</li><li><strong>Artist</strong>：绘制在画布上的可见元素。</li></ul><p><strong>综合运用</strong></p><p>为了更好地理解这些组件的运作，下面是一个使用 Python 和 Matplotlib 的简单示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个图像</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向图像中添加子图</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)  <span class="comment"># 111 表示“1x1 网格，第一个子图”</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制数据</span></span><br><span class="line">ax.plot([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">10</span>], [<span class="number">10</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">40</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义轴</span></span><br><span class="line">ax.set_xlim(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">ax.set_ylim(<span class="number">0</span>, <span class="number">50</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;X 轴标签&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Y 轴标签&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;示例图&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图表</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>理解和操作 Matplotlib 图像的各个组成部分对于任何想要创建详细且特定图形数据表示的人来说都是至关重要的。Matplotlib 图表的每个元素都有其特定的用途，了解这些元素如何协同工作可以让你更好地控制图表的外观和行为。通过掌握 Matplotlib 图像的结构，你可以使数据可视化任务变得更加直观和有效。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="PythonNote" scheme="https://discover304.top/categories/NoteBook/PythonNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="Data Science" scheme="https://discover304.top/tags/Data-Science/"/>
    
    <category term="Matplotlib" scheme="https://discover304.top/tags/Matplotlib/"/>
    
    <category term="Data Visualization" scheme="https://discover304.top/tags/Data-Visualization/"/>
    
  </entry>
  
  <entry>
    <title>Evaluating Classification Models With `Classification_report` in Scikit-Learn</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-4/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-4/</id>
    <published>2024-08-20T14:11:17.000Z</published>
    <updated>2024-08-20T18:49:48.143Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><strong>Introduction</strong></p><p>In the realm of machine learning, evaluating the performance of a classification model is crucial. scikit-learn, a powerful tool for machine learning in Python, provides several utilities for model evaluation. One of the most useful functions is <code>classification_report</code>, which gives a comprehensive overview of the key metrics for a classification model. In this post, we’ll explore how to use this function to assess model performance effectively.</p><p><strong>What is <code>classification_report</code>?</strong></p><p>The <code>classification_report</code> function in scikit-learn’s <code>metrics</code> module generates a report showing the main classification metrics on a per-class basis. This makes it easier to understand the performance of the model across different categories, providing insights into how well the model is identifying each class.</p><p><strong>Metrics Explained</strong></p><p>The <code>classification_report</code> outputs the following metrics for each class:</p><ul><li><strong>Precision</strong>: The ratio of correctly predicted positive observations to the total predicted positives. It is a measure of a classifier’s exactness. High precision relates to a low false positive rate.</li><li><strong>Recall</strong>: The ratio of correctly predicted positive observations to the all observations in actual class. It is a measure of a classifier’s completeness.</li><li><strong>F1 Score</strong>: The weighted average of Precision and Recall. This score takes both false positives and false negatives into account. It is particularly useful when the class distribution is uneven.</li><li><strong>Support</strong>: The number of actual occurrences of the class in the specified dataset. Useful for assessing how representative the reported metrics are.</li></ul><p><strong>Using <code>classification_report</code></strong></p><p>To use <code>classification_report</code>, you first need a trained model and a test dataset. Here’s a step-by-step guide on implementing it:</p><ol><li><strong>Import the necessary modules and load data</strong>:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the Iris dataset</span></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">X, y = iris.data, iris.target</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Split the data into training and testing sets</strong>:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.3</span>, random_state=<span class="number">42</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>Train a classification model</strong>:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = RandomForestClassifier(random_state=<span class="number">42</span>)</span><br><span class="line">model.fit(X_train, y_train)</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>Predict on the testing set</strong>:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y_pred = model.predict(X_test)</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>Generate and print the classification report</strong>:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">report = classification_report(y_test, y_pred, target_names=iris.target_names)</span><br><span class="line"><span class="built_in">print</span>(report)</span><br></pre></td></tr></table></figure><p><strong>Example Output</strong></p><p>The output will display the precision, recall, f1-score, and support for each class, followed by the averages for these metrics:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">             <span class="attribute">precision</span>    recall  f1-score   support</span><br><span class="line"></span><br><span class="line">     <span class="attribute">setosa</span>       <span class="number">1</span>.<span class="number">00</span>      <span class="number">1</span>.<span class="number">00</span>      <span class="number">1</span>.<span class="number">00</span>        <span class="number">19</span></span><br><span class="line"> <span class="attribute">versicolor</span>       <span class="number">1</span>.<span class="number">00</span>      <span class="number">0</span>.<span class="number">90</span>      <span class="number">0</span>.<span class="number">95</span>        <span class="number">10</span></span><br><span class="line">  <span class="attribute">virginica</span>       <span class="number">0</span>.<span class="number">88</span>      <span class="number">1</span>.<span class="number">00</span>      <span class="number">0</span>.<span class="number">93</span>        <span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">avg</span> / total       <span class="number">0</span>.<span class="number">96</span>      <span class="number">0</span>.<span class="number">96</span>      <span class="number">0</span>.<span class="number">96</span>        <span class="number">43</span></span><br></pre></td></tr></table></figure><p><strong>Conclusion</strong></p><p>The <code>classification_report</code> from scikit-learn provides a detailed assessment of a model’s performance. By understanding these metrics, you can better tune your model and potentially improve its accuracy and reliability. Whether you’re working on a simple binary classification task or a more complex multi-class problem, the <code>classification_report</code> offers valuable insights into your model’s capabilities and areas for improvement.</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><strong>介绍</strong></p><p>在机器学习领域，评估分类模型的性能至关重要。scikit-learn 是一个功能强大的 Python 机器学习工具，提供了多种模型评估工具。其中最有用的函数之一是 <code>classification_report</code>，它可以全面概述分类模型的关键指标。在这篇文章中，我们将探讨如何使用该函数有效地评估模型性能。</p><p><strong>什么是 <code>classification_report</code>？</strong></p><p>scikit-learn 的 <code>metrics</code> 模块中的 <code>classification_report</code> 函数生成一份报告，显示每个类别的主要分类指标。这使得理解模型在不同类别中的表现变得更加容易，提供了关于模型如何识别各个类别的深入见解。</p><p><strong>指标解释</strong></p><p><code>classification_report</code> 为每个类别输出以下指标：</p><ul><li><strong>精度（Precision）</strong>：正确预测的正类观察值与总预测正类的比率。它是分类器准确性的度量。高精度意味着较低的假阳性率。</li><li><strong>召回率（Recall）</strong>：正确预测的正类观察值与实际正类观察值的比率。它是分类器完备性的度量。</li><li><strong>F1 值（F1 Score）</strong>：精度和召回率的加权平均值。该值同时考虑了假阳性和假阴性。特别适用于类分布不均衡的情况。</li><li><strong>支持（Support）</strong>：数据集中实际类别的出现次数。用于评估报告的指标代表性。</li></ul><p><strong>使用 <code>classification_report</code></strong></p><p>使用 <code>classification_report</code> 之前，你需要一个已训练的模型和一个测试数据集。以下是实现的分步指南：</p><ol><li><strong>导入必要的模块并加载数据</strong>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载鸢尾花数据集</span></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">X, y = iris.data, iris.target</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>将数据分为训练集和测试集</strong>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.3</span>, random_state=<span class="number">42</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>训练分类模型</strong>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = RandomForestClassifier(random_state=<span class="number">42</span>)</span><br><span class="line">model.fit(X_train, y_train)</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>在测试集上进行预测</strong>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y_pred = model.predict(X_test)</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>生成并打印分类报告</strong>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">report = classification_report(y_test, y_pred, target_names=iris.target_names)</span><br><span class="line"><span class="built_in">print</span>(report)</span><br></pre></td></tr></table></figure><p><strong>示例输出</strong></p><p>输出将显示每个类别的精度、召回率、F1 值和支持，随后是这些指标的平均值：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">             <span class="attribute">precision</span>    recall  f1-score   support</span><br><span class="line"></span><br><span class="line">     <span class="attribute">setosa</span>       <span class="number">1</span>.<span class="number">00</span>      <span class="number">1</span>.<span class="number">00</span>      <span class="number">1</span>.<span class="number">00</span>        <span class="number">19</span></span><br><span class="line"> <span class="attribute">versicolor</span>       <span class="number">1</span>.<span class="number">00</span>      <span class="number">0</span>.<span class="number">90</span>      <span class="number">0</span>.<span class="number">95</span>        <span class="number">10</span></span><br><span class="line">  <span class="attribute">virginica</span>       <span class="number">0</span>.<span class="number">88</span>      <span class="number">1</span>.<span class="number">00</span>      <span class="number">0</span>.<span class="number">93</span>        <span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">avg</span> / total       <span class="number">0</span>.<span class="number">96</span>      <span class="number">0</span>.<span class="number">96</span>      <span class="number">0</span>.<span class="number">96</span>        <span class="number">43</span></span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>scikit-learn 的 <code>classification_report</code> 提供了对模型性能的详细评估。通过理解这些指标，你可以更好地调整模型，并可能提高其准确性和可靠性。无论你是在处理简单的二分类任务，还是更复杂的多分类问题，<code>classification_report</code> 都能为你提供模型能力和改进方向的宝贵见解。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="Machine Learning" scheme="https://discover304.top/tags/Machine-Learning/"/>
    
    <category term="scikit-learn" scheme="https://discover304.top/tags/scikit-learn/"/>
    
    <category term="Classification" scheme="https://discover304.top/tags/Classification/"/>
    
  </entry>
  
  <entry>
    <title>A Quick Guide to Linear Algebra With NumPy</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-3/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-3/</id>
    <published>2024-08-20T14:11:14.000Z</published>
    <updated>2024-08-20T18:49:45.957Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><strong>Introduction</strong></p><p>NumPy is a fundamental package for numerical computing in Python. It provides efficient operations for handling arrays and matrices, which are crucial for data analysis and scientific computing. In this guide, we’ll explore some basic linear algebra operations available in NumPy, showcasing how to perform these operations both with operator overloads and built-in functions.</p><p><strong>Elementwise Operations</strong></p><p>Elementwise operations are basic operations that are applied element by element on arrays. These operations are the building blocks for more complex mathematical computations in data science and engineering tasks.</p><p><strong>Addition and Subtraction</strong></p><p>Let’s start by creating two simple arrays and performing elementwise addition and subtraction:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Elementwise Addition</span></span><br><span class="line"><span class="built_in">print</span>(a + b)  <span class="comment"># Output: [5 7 9]</span></span><br><span class="line"><span class="built_in">print</span>(np.add(a, b))  <span class="comment"># Output: [5 7 9]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Elementwise Subtraction</span></span><br><span class="line"><span class="built_in">print</span>(a - b)  <span class="comment"># Output: [-3 -3 -3]</span></span><br><span class="line"><span class="built_in">print</span>(np.subtract(a, b))  <span class="comment"># Output: [-3 -3 -3]</span></span><br></pre></td></tr></table></figure><p><strong>Vector and Matrix Multiplication</strong></p><p>Beyond basic arithmetic, NumPy supports various matrix operations, including dot products, matrix multiplication, and more.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inner Product of Vectors</span></span><br><span class="line">c = np.dot(a, b)</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># Output: 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Matrix Multiplication</span></span><br><span class="line">a = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">b = [[<span class="number">4</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>]]</span><br><span class="line">c = np.matmul(a, b)</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># Output: [[4 1] [2 2]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Using @ operator for Matrix Multiplication</span></span><br><span class="line">a_array = np.array(a)</span><br><span class="line">b_array = np.array(b)</span><br><span class="line">c = a_array @ b_array</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># Output: [[4 1] [2 2]]</span></span><br></pre></td></tr></table></figure><p><strong>Advanced Matrix Operations</strong></p><p>NumPy also provides functions to perform more complex matrix operations like inversion, determinant calculation, and matrix transposition.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Matrix Inversion</span></span><br><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">b = np.linalg.inv(a)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)  <span class="comment"># Outputs the inverse of matrix a</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Determinant of a Matrix</span></span><br><span class="line"><span class="built_in">print</span>(np.linalg.det(a))  <span class="comment"># Output: -2.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Matrix Transpose</span></span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.T)  <span class="comment"># Transpose of matrix a</span></span><br></pre></td></tr></table></figure><p><strong>Creating Identity and Eye Matrices</strong></p><p>Creating specific types of matrices like identity matrices is straightforward in NumPy:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib</span><br><span class="line"><span class="built_in">print</span>(np.matlib.identity(<span class="number">5</span>))  <span class="comment"># Identity matrix of size 5x5</span></span><br><span class="line"><span class="built_in">print</span>(np.eye(<span class="number">5</span>))  <span class="comment"># Identity matrix using eye function</span></span><br></pre></td></tr></table></figure><p><strong>Conclusion</strong></p><p>NumPy makes it simple to perform a variety of linear algebra operations, which are essential for many applications in science and engineering. Understanding these basics allows you to handle more complex tasks efficiently with Python. Whether you are performing simple elementwise operations or complex matrix multiplications, NumPy provides the functionality to do it quickly and effectively.</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><strong>介绍</strong></p><p>NumPy 是 Python 中用于数值计算的基础包。它提供了处理数组和矩阵的高效操作，这对于数据分析和科学计算至关重要。在本指南中，我们将探讨 NumPy 中可用的一些基本线性代数操作，展示如何通过运算符重载和内置函数执行这些操作。</p><p><strong>元素级操作</strong></p><p>元素级操作是应用于数组元素的基本操作。这些操作是数据科学和工程任务中更复杂数学计算的构建块。</p><p><strong>加法和减法</strong></p><p>让我们从创建两个简单的数组并执行元素级加法和减法开始：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 元素级加法</span></span><br><span class="line"><span class="built_in">print</span>(a + b)  <span class="comment"># 输出: [5 7 9]</span></span><br><span class="line"><span class="built_in">print</span>(np.add(a, b))  <span class="comment"># 输出: [5 7 9]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 元素级减法</span></span><br><span class="line"><span class="built_in">print</span>(a - b)  <span class="comment"># 输出: [-3 -3 -3]</span></span><br><span class="line"><span class="built_in">print</span>(np.subtract(a, b))  <span class="comment"># 输出: [-3 -3 -3]</span></span><br></pre></td></tr></table></figure><p><strong>向量和矩阵乘法</strong></p><p>除了基本的算术运算外，NumPy 还支持各种矩阵操作，包括点积、矩阵乘法等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 向量的内积</span></span><br><span class="line">c = np.dot(a, b)</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># 输出: 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩阵乘法</span></span><br><span class="line">a = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">b = [[<span class="number">4</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>]]</span><br><span class="line">c = np.matmul(a, b)</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># 输出: [[4 1] [2 2]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 @ 运算符进行矩阵乘法</span></span><br><span class="line">a_array = np.array(a)</span><br><span class="line">b_array = np.array(b)</span><br><span class="line">c = a_array @ b_array</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># 输出: [[4 1] [2 2]]</span></span><br></pre></td></tr></table></figure><p><strong>高级矩阵操作</strong></p><p>NumPy 还提供了执行更复杂的矩阵操作的函数，如矩阵求逆、行列式计算和矩阵转置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵求逆</span></span><br><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">b = np.linalg.inv(a)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)  <span class="comment"># 输出矩阵 a 的逆矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩阵行列式</span></span><br><span class="line"><span class="built_in">print</span>(np.linalg.det(a))  <span class="comment"># 输出: -2.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩阵转置</span></span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.T)  <span class="comment"># 输出矩阵 a 的转置</span></span><br></pre></td></tr></table></figure><p><strong>创建单位矩阵和眼矩阵</strong></p><p>在 NumPy 中，创建特定类型的矩阵（如单位矩阵）非常简单：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib</span><br><span class="line"><span class="built_in">print</span>(np.matlib.identity(<span class="number">5</span>))  <span class="comment"># 5x5 的单位矩阵</span></span><br><span class="line"><span class="built_in">print</span>(np.eye(<span class="number">5</span>))  <span class="comment"># 使用 eye 函数创建的单位矩阵</span></span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>NumPy 使执行各种线性代数操作变得简单，这对于科学和工程领域的许多应用都是必不可少的。理解这些基础知识可以让你使用 Python 高效地处理更复杂的任务。无论你是在执行简单的元素级操作还是复杂的矩阵乘法，NumPy 都提供了快速且有效的功能。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="PythonNote" scheme="https://discover304.top/categories/NoteBook/PythonNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="Data Science" scheme="https://discover304.top/tags/Data-Science/"/>
    
    <category term="NumPy" scheme="https://discover304.top/tags/NumPy/"/>
    
    <category term="Linear Algebra" scheme="https://discover304.top/tags/Linear-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>Understanding Array Slicing in NumPy: A Practical Guide</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-2/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-2/</id>
    <published>2024-08-20T14:11:08.000Z</published>
    <updated>2024-08-20T18:49:43.166Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><strong>Introduction</strong></p><p>In the world of data manipulation with Python, NumPy stands as one of the most used libraries due to its efficiency and powerful array operations. One common operation is array slicing, which can be a bit tricky to understand, especially for those new to Python. In this blog post, we’ll delve into how slicing works in NumPy and why it’s important to understand its behavior to avoid potential bugs in your code.</p><p><strong>Creating a Basic Array</strong></p><p>To begin, let’s create a simple rank 2 NumPy array with the shape (3, 4). This array will consist of 12 elements arranged in three rows and four columns:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">              [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></table></figure><p><strong>Slicing the Array</strong></p><p>NumPy arrays allow for a wide variety of slicing options, making it easy to extract portions of an array. Let’s say we want to extract a subarray consisting of the first two rows and the second and third columns:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b = a[:<span class="number">2</span>, <span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>This slice operation creates a new array <code>b</code> with the shape (2, 2), looking like this:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[[2 3]</span></span><br><span class="line"><span class="string"> [6 7]]</span></span><br></pre></td></tr></table></figure><p>Here’s how we do it in code:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><p><strong>Understanding the Connection</strong></p><p>When you perform a slice operation in NumPy, it doesn’t create a new independent array. Instead, the slice is a view on the original array. This is an essential aspect of NumPy design that makes array manipulation more memory efficient but can lead to confusion about the linkage between the original array and the slice. Let’s demonstrate this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>, <span class="number">1</span>])  <span class="comment"># Output will be 2</span></span><br><span class="line">b[<span class="number">0</span>, <span class="number">0</span>] = <span class="number">77</span>    <span class="comment"># Modify the slice</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>, <span class="number">1</span>])  <span class="comment"># Output will be 77</span></span><br></pre></td></tr></table></figure><p>Notice how changing the value of <code>b[0, 0]</code> also changed <code>a[0, 1]</code>. This happens because the slice <code>b</code> is just a view of the same data in <code>a</code>.</p><p><strong>Conclusion</strong></p><p>Understanding that slices in NumPy are views and not copies can help prevent unintended side-effects in your programs. When you modify a slice, you’re actually modifying the underlying array data. This behavior is by design, enhancing performance by avoiding unnecessary data copies. However, if you need an independent copy of a slice, you should use the <code>.copy()</code> method to explicitly make a duplicate of the array data.</p><p>This simple example illustrates how powerful and efficient NumPy is for data manipulation, but also highlights the importance of understanding its inner workings. Happy coding!</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><strong>介绍</strong></p><p>在使用 Python 进行数据处理的世界中，NumPy 是最常用的库之一，因为它的高效性和强大的数组操作功能。数组切片是一个常见的操作，但对于 Python 初学者来说，理解它可能有些困难。在这篇博文中，我们将深入探讨 NumPy 中的切片操作，了解其工作原理以及为什么理解其行为对避免潜在的代码错误至关重要。</p><p><strong>创建一个基础数组</strong></p><p>首先，让我们创建一个简单的二维 NumPy 数组，形状为 (3, 4)。该数组包含 12 个元素，排列成三行四列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">              [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></table></figure><p><strong>对数组进行切片</strong></p><p>NumPy 数组允许多种切片操作，使得提取数组的某些部分变得非常简单。假设我们想提取一个包含前两行和第二、第三列的子数组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b = a[:<span class="number">2</span>, <span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>此切片操作创建了一个形状为 (2, 2) 的新数组 <code>b</code>，其内容如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[[2 3]</span></span><br><span class="line"><span class="string"> [6 7]]</span></span><br></pre></td></tr></table></figure><p>代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><p><strong>理解切片的联系</strong></p><p>当你在 NumPy 中进行切片操作时，它不会创建一个新的独立数组。相反，切片是对原始数组的视图。这是 NumPy 设计中的一个重要方面，它使得数组操作更加内存高效，但也可能导致原始数组和切片之间的联动产生混淆。我们来演示一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>, <span class="number">1</span>])  <span class="comment"># 输出将是 2</span></span><br><span class="line">b[<span class="number">0</span>, <span class="number">0</span>] = <span class="number">77</span>    <span class="comment"># 修改切片</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>, <span class="number">1</span>])  <span class="comment"># 输出将是 77</span></span><br></pre></td></tr></table></figure><p>注意，当修改 <code>b[0, 0]</code> 的值时，<code>a[0, 1]</code> 的值也发生了变化。这是因为切片 <code>b</code> 只是 <code>a</code> 中相同数据的视图。</p><p><strong>总结</strong></p><p>理解 NumPy 中的切片是视图而不是副本，有助于防止程序中出现意外的副作用。当你修改切片时，实际上是在修改底层的数组数据。这种行为是为了增强性能，避免不必要的数据复制。然而，如果你需要一个切片的独立副本，应该使用 <code>.copy()</code> 方法显式地复制数组数据。</p><p>这个简单的示例说明了 NumPy 在数据处理中的强大和高效，同时也强调了理解其内部机制的重要性。祝编程愉快！</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="PythonNote" scheme="https://discover304.top/categories/NoteBook/PythonNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="NumPy" scheme="https://discover304.top/tags/NumPy/"/>
    
    <category term="Array Slicing" scheme="https://discover304.top/tags/Array-Slicing/"/>
    
    <category term="Data Manipulation" scheme="https://discover304.top/tags/Data-Manipulation/"/>
    
  </entry>
  
  <entry>
    <title>How to Install and Manage Conda Environments Using .Yml Files</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-1-conda-yml/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-1-conda-yml/</id>
    <published>2024-08-20T14:02:05.000Z</published>
    <updated>2024-08-20T18:05:32.204Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>To install a Conda environment from a <code>.yml</code> file, follow these steps:</p><h3 id="1-Prepare-the-yml-File"><a href="#1-Prepare-the-yml-File" class="headerlink" title="1. Prepare the .yml File"></a>1. <strong>Prepare the <code>.yml</code> File</strong></h3><p>Ensure you have a <code>.yml</code> file that defines the Conda environment. This file typically includes dependencies and configuration settings for the environment. It might look something like this:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">myenv</span></span><br><span class="line"><span class="attr">channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">python=3.8</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">numpy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pandas</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">scipy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pip:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">torch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">torchvision</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">torchaudio</span></span><br></pre></td></tr></table></figure><h3 id="2-Install-Conda-if-not-already-installed"><a href="#2-Install-Conda-if-not-already-installed" class="headerlink" title="2. Install Conda (if not already installed)"></a>2. <strong>Install Conda (if not already installed)</strong></h3><p>If you haven’t installed Conda, you can download and install Miniconda or Anaconda:</p><ul><li><strong>Miniconda</strong>: A minimal installer for Conda. <a href="https://docs.conda.io/en/latest/miniconda.html">Download Miniconda</a></li><li><strong>Anaconda</strong>: A larger distribution that includes Conda, Python, and many scientific packages. <a href="https://www.anaconda.com/products/distribution">Download Anaconda</a></li></ul><h3 id="3-Create-the-Environment"><a href="#3-Create-the-Environment" class="headerlink" title="3. Create the Environment"></a>3. <strong>Create the Environment</strong></h3><p>Open your terminal (or Anaconda Prompt on Windows) and navigate to the directory where your <code>.yml</code> file is located. Run the following command to create the Conda environment from the <code>.yml</code> file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> create -f environment.yml</span><br></pre></td></tr></table></figure><p>Replace <code>environment.yml</code> with the name of your <code>.yml</code> file if it’s different.</p><h3 id="4-Activate-the-Environment"><a href="#4-Activate-the-Environment" class="headerlink" title="4. Activate the Environment"></a>4. <strong>Activate the Environment</strong></h3><p>After the environment is created, activate it with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate myenv</span><br></pre></td></tr></table></figure><p>Replace <code>myenv</code> with the name specified in the <code>.yml</code> file under the <code>name</code> field.</p><h3 id="5-Verify-the-Environment"><a href="#5-Verify-the-Environment" class="headerlink" title="5. Verify the Environment"></a>5. <strong>Verify the Environment</strong></h3><p>You can check that the environment is correctly set up by listing the installed packages:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><h3 id="6-Update-or-Export-the-Environment"><a href="#6-Update-or-Export-the-Environment" class="headerlink" title="6. Update or Export the Environment"></a>6. <strong>Update or Export the Environment</strong></h3><ul><li><p><strong>To update an environment</strong>: Modify the <code>.yml</code> file and run the command again:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> update -f environment.yml</span><br></pre></td></tr></table></figure></li><li><p><strong>To export the environment</strong>: You can create a <code>.yml</code> file from an existing environment with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> <span class="built_in">export</span> &gt; environment.yml</span><br></pre></td></tr></table></figure></li></ul><p>This creates a <code>.yml</code> file with the current environment’s configuration, which you can then share or use to recreate the environment elsewhere.</p><p>By following these steps, you can easily set up and manage Conda environments using <code>.yml</code> files.</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><h3 id="1-准备-yml-文件"><a href="#1-准备-yml-文件" class="headerlink" title="1. 准备 .yml 文件"></a>1. <strong>准备 <code>.yml</code> 文件</strong></h3><p>确保你有一个定义了 Conda 环境的 <code>.yml</code> 文件。这个文件通常包括环境的依赖和配置设置。文件内容可能如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">myenv</span></span><br><span class="line"><span class="attr">channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">python=3.8</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">numpy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pandas</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">scipy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pip:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">torch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">torchvision</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">torchaudio</span></span><br></pre></td></tr></table></figure><h3 id="2-安装-Conda（如果尚未安装）"><a href="#2-安装-Conda（如果尚未安装）" class="headerlink" title="2. 安装 Conda（如果尚未安装）"></a>2. <strong>安装 Conda（如果尚未安装）</strong></h3><p>如果你还没有安装 Conda，可以下载并安装 Miniconda 或 Anaconda：</p><ul><li><strong>Miniconda</strong>：Conda 的最小安装程序。<a href="https://docs.conda.io/en/latest/miniconda.html">下载 Miniconda</a></li><li><strong>Anaconda</strong>：包括 Conda、Python 和许多科学包的更大分发版。<a href="https://www.anaconda.com/products/distribution">下载 Anaconda</a></li></ul><h3 id="3-创建环境"><a href="#3-创建环境" class="headerlink" title="3. 创建环境"></a>3. <strong>创建环境</strong></h3><p>打开你的终端（或 Windows 上的 Anaconda 提示符）并导航到你的 <code>.yml</code> 文件所在的目录。运行以下命令从 <code>.yml</code> 文件创建 Conda 环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> create -f environment.yml</span><br></pre></td></tr></table></figure><p>如果你的 <code>.yml</code> 文件名不是 <code>environment.yml</code>，请替换为相应的文件名。</p><h3 id="4-激活环境"><a href="#4-激活环境" class="headerlink" title="4. 激活环境"></a>4. <strong>激活环境</strong></h3><p>环境创建后，用以下命令激活它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate myenv</span><br></pre></td></tr></table></figure><p>将 <code>myenv</code> 替换为 <code>.yml</code> 文件中 <code>name</code> 字段指定的名称。</p><h3 id="5-验证环境"><a href="#5-验证环境" class="headerlink" title="5. 验证环境"></a>5. <strong>验证环境</strong></h3><p>你可以通过列出已安装的包来检查环境是否正确设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><h3 id="6-更新或导出环境"><a href="#6-更新或导出环境" class="headerlink" title="6. 更新或导出环境"></a>6. <strong>更新或导出环境</strong></h3><ul><li><p><strong>更新环境</strong>：修改 <code>.yml</code> 文件并再次运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> update -f environment.yml</span><br></pre></td></tr></table></figure></li><li><p><strong>导出环境</strong>：你可以从现有环境创建一个 <code>.yml</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> <span class="built_in">export</span> &gt; environment.yml</span><br></pre></td></tr></table></figure></li></ul><p>这会创建一个包含当前环境配置的 <code>.yml</code> 文件，你可以分享或用它在其他地方重建环境。</p><p>按照这些步骤，你可以轻松地使用 <code>.yml</code> 文件设置和管理 Conda 环境。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="PythonNote" scheme="https://discover304.top/categories/NoteBook/PythonNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="Conda" scheme="https://discover304.top/tags/Conda/"/>
    
    <category term="Environment Management" scheme="https://discover304.top/tags/Environment-Management/"/>
    
    <category term="Tutorial" scheme="https://discover304.top/tags/Tutorial/"/>
    
  </entry>
  
  <entry>
    <title>Unlocking the Power of Statistical Analysis With Statsmodels in Python</title>
    <link href="https://discover304.top/2024/08/20/2024q3/189-0-statsmodels/"/>
    <id>https://discover304.top/2024/08/20/2024q3/189-0-statsmodels/</id>
    <published>2024-08-20T13:10:32.000Z</published>
    <updated>2024-08-20T17:37:17.491Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>In the ever-evolving world of data science, <code>statsmodels</code> stands out as a specialized Python library tailored for statistical analysis and econometric applications. Unlike broader machine learning libraries, <code>statsmodels</code> offers tools designed for in-depth statistical inference, providing insights into the underlying mechanics of data.</p><h3 id="Why-Use-statsmodels"><a href="#Why-Use-statsmodels" class="headerlink" title="Why Use statsmodels?"></a>Why Use statsmodels?</h3><p><code>statsmodels</code> is essential for anyone needing to perform rigorous statistical testing and modeling. It supports a range of statistical models and methods, including:</p><ul><li><strong>Linear and Generalized Linear Models</strong>: For predictive modeling with statistical inference.</li><li><strong>Robust Linear Models</strong>: To mitigate the influence of outliers.</li><li><strong>Time Series Analysis</strong>: Tools for handling data indexed in time sequence.</li></ul><p>Each model in <code>statsmodels</code> is equipped with extensive diagnostic features to validate model assumptions and interpret variable relationships effectively.</p><h3 id="Enhancing-statsmodels-with-Pandas"><a href="#Enhancing-statsmodels-with-Pandas" class="headerlink" title="Enhancing statsmodels with Pandas"></a>Enhancing statsmodels with Pandas</h3><blockquote><p><strong>Enhancement Alert</strong>: Integrating <code>statsmodels</code> with <code>Pandas</code> elevates the user experience by improving data manipulation and readability of output. <code>Pandas</code> DataFrame structures streamline data handling, making statistical analysis more intuitive and accessible.</p></blockquote><h3 id="A-Practical-Walkthrough"><a href="#A-Practical-Walkthrough" class="headerlink" title="A Practical Walkthrough"></a>A Practical Walkthrough</h3><p>To demonstrate the power of <code>statsmodels</code> integrated with <code>Pandas</code>, let’s go through a simple example of linear regression analysis:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load data into a Pandas DataFrame</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;your_data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prepare the model by adding an intercept</span></span><br><span class="line">data[<span class="string">&#x27;Intercept&#x27;</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define dependent and independent variables</span></span><br><span class="line">y = data[<span class="string">&#x27;Target&#x27;</span>]</span><br><span class="line">X = data[[<span class="string">&#x27;Intercept&#x27;</span>, <span class="string">&#x27;Feature1&#x27;</span>, <span class="string">&#x27;Feature2&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fit an OLS model</span></span><br><span class="line">model = sm.OLS(y, X)</span><br><span class="line">results = model.fit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the summary</span></span><br><span class="line"><span class="built_in">print</span>(results.summary())</span><br></pre></td></tr></table></figure><p>This example highlights how seamlessly <code>statsmodels</code> and <code>Pandas</code> can work together, simplifying the process of fitting a model and interpreting results.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p><code>statsmodels</code> offers a robust platform for statistical analysis, making it an indispensable tool for statisticians, economists, and data scientists. By integrating <code>statsmodels</code> with <code>Pandas</code>, users can leverage powerful statistical techniques alongside superior data management capabilities. For anyone looking to delve deeper into statistical analysis, <code>statsmodels</code> provides the tools necessary to uncover the intricate patterns and relationships within data.</p><h3 id="Explore-More"><a href="#Explore-More" class="headerlink" title="Explore More"></a>Explore More</h3><p>For more detailed information and advanced features, visit the <a href="https://www.statsmodels.org/stable/index.html">official statsmodels documentation</a>. Enhance your analytical skills and transform raw data into meaningful insights with <code>statsmodels</code>.</p><hr><blockquote><p><strong>🍀Afterword🍀</strong><br>The blog focuses on programming, algorithms, robotics, artificial intelligence, mathematics, etc., with a continuous output of high quality.<br><strong>🌸Chat QQ Group</strong>: <a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">Rabbit’s Magic Workshop</a> (942848525)<br><strong>⭐Bilibili Account</strong>: <a href="https://space.bilibili.com/98639326">白拾ShiroX</a> (Active in the knowledge and animation zones)<br><strong>✨GitHub Page</strong>: <a href="https://github.com/YangSierCode000">YangSierCode000</a> (Engineering files)<br><strong>⛳Discord Community</strong>: <a href="https://discord.g/nn5NDXMgae">AierLab</a> (Artificial Intelligence community)</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><h2 id="使用-Python-中的-statsmodels-解锁统计分析的力量"><a href="#使用-Python-中的-statsmodels-解锁统计分析的力量" class="headerlink" title="使用 Python 中的 statsmodels 解锁统计分析的力量"></a><strong>使用 Python 中的 statsmodels 解锁统计分析的力量</strong></h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>在不断发展的数据科学世界中，<code>statsmodels</code> 作为一个专为统计分析和计量经济学应用设计的 Python 库而脱颖而出。与更广泛的机器学习库不同，<code>statsmodels</code> 提供了专门设计的工具，用于深入的统计推断，提供数据的内在机制洞察。</p><h3 id="为什么使用-statsmodels？"><a href="#为什么使用-statsmodels？" class="headerlink" title="为什么使用 statsmodels？"></a>为什么使用 statsmodels？</h3><p><code>statsmodels</code> 对任何需要进行严格统计测试和建模的人都是必不可少的。它支持范围广泛的统计模型和方法，包括：</p><ul><li><strong>线性和广义线性模型</strong>：用于具有统计推断的预测建模。</li><li><strong>稳健线性模型</strong>：减轻异常值的影响。</li><li><strong>时间序列分析</strong>：处理时间顺序索引数据的工具。</li></ul><p><code>statsmodels</code> 中的每个模型都配备了广泛的诊断功能，以验证模型假设并有效解释变量关系。</p><h3 id="用-Pandas-增强-statsmodels"><a href="#用-Pandas-增强-statsmodels" class="headerlink" title="用 Pandas 增强 statsmodels"></a>用 Pandas 增强 statsmodels</h3><blockquote><p><strong>增强提示</strong>：将 <code>statsmodels</code> 与 <code>Pandas</code> 集成可以通过改进数据操作和输出的可读性来提升用户体验。<code>Pandas</code> DataFrame 结构简化了数据处理，使统计分析更直观且易于访问。</p></blockquote><h3 id="实际操作演示"><a href="#实际操作演示" class="headerlink" title="实际操作演示"></a>实际操作演示</h3><p>为了展示 <code>statsmodels</code> 与 <code>Pandas</code> 的强大结合，让我们通过一个简单的线性回归分析示例来进行演示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据加载到 Pandas DataFrame 中</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;your_data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备模型并添加截距</span></span><br><span class="line">data[<span class="string">&#x27;Intercept&#x27;</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义因变量和自变量</span></span><br><span class="line">y = data[<span class="string">&#x27;Target&#x27;</span>]</span><br><span class="line">X = data[[<span class="string">&#x27;Intercept&#x27;</span>, <span class="string">&#x27;Feature1&#x27;</span>, <span class="string">&#x27;Feature2&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拟合 OLS 模型</span></span><br><span class="line">model = sm.OLS(y, X)</span><br><span class="line">results = model.fit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示摘要</span></span><br><span class="line"><span class="built_in">print</span>(results.summary())</span><br></pre></td></tr></table></figure><p>此示例突出显示了 <code>statsmodels</code> 和 <code>Pandas</code> 如何无缝协作，简化了拟合模型和解释结果的过程。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p><code>statsmodels</code> 提供了一个强大的统计分析平台，使其成为统计学家、经济学家和数据科学家的必备工具。通过将 <code>statsmodels</code> 与 <code>Pandas</code> 集成，用户可以利用强大的统计技术和优越的数据管理能力。对于任何希望深入统计分析的人来说，<code>statsmodels</code> 提供了发现数据中复杂模式和关系的必要工具。</p><h3 id="探索更多"><a href="#探索更多" class="headerlink" title="探索更多"></a>探索更多</h3><p>欲了解更多详细信息和高级功能，请访问 <a href="https://www.statsmodels.org/stable/index.html">官方 statsmodels 文档</a>。通过 <code>statsmodels</code> 提升您的分析技能，将原始数据转化为有意义的洞察。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾ShiroX</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="Data Science" scheme="https://discover304.top/tags/Data-Science/"/>
    
    <category term="statsmodels" scheme="https://discover304.top/tags/statsmodels/"/>
    
    <category term="Statistical Analysis" scheme="https://discover304.top/tags/Statistical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Maximizing Efficiency With MBZUAI HPC: A Guide to SSH, Slurm, and Tmux</title>
    <link href="https://discover304.top/2024/08/19/2024q3/188-0-mbzuai-instruction/"/>
    <id>https://discover304.top/2024/08/19/2024q3/188-0-mbzuai-instruction/</id>
    <published>2024-08-19T14:21:21.000Z</published>
    <updated>2024-08-20T18:07:21.840Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">English Version</button></li><li class="tab"><button type="button" data-href="#-2">中文版本</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>Working on high-performance computing (HPC) systems requires a solid understanding of the tools and processes that enable efficient resource management. This guide covers essential steps to access the MBZUAI HPC environment using SSH, manage jobs with Slurm, and maintain persistent sessions with Tmux. Whether you’re a beginner or looking to refine your skills, this blog post will help you get the most out of your HPC experience.</p><h2 id="1-Quick-Access-Links"><a href="#1-Quick-Access-Links" class="headerlink" title="1. Quick Access Links"></a>1. Quick Access Links</h2><p>Before diving into the technical details, make sure you have easy access to these essential resources:</p><ul><li><a href="https://computinglabswiki.mbzuai.ac.ae/">Computing Labs Wiki</a></li></ul><h2 id="2-HPC-Access-via-SSH"><a href="#2-HPC-Access-via-SSH" class="headerlink" title="2. HPC Access via SSH"></a>2. HPC Access via SSH</h2><p>To access the MBZUAI HPC, you’ll need to use SSH. Below is the configuration for accessing the lab workstation:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host MBZUAI_lab_workstation</span><br><span class="line">    HostName login-student-lab.mbzu.ae</span><br><span class="line">    User haobo.yang</span><br></pre></td></tr></table></figure><h2 id="3-Managing-Resources-with-Slurm"><a href="#3-Managing-Resources-with-Slurm" class="headerlink" title="3. Managing Resources with Slurm"></a>3. Managing Resources with Slurm</h2><p>Slurm is a powerful workload manager that helps allocate and manage computing resources on HPC systems. Here are some key commands to get you started:</p><h3 id="3-1-Viewing-Partition-and-Node-Information"><a href="#3-1-Viewing-Partition-and-Node-Information" class="headerlink" title="3.1. Viewing Partition and Node Information"></a>3.1. Viewing Partition and Node Information</h3><p>To see the available partitions and nodes, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sinfo</span><br></pre></td></tr></table></figure><h3 id="3-2-Viewing-Job-and-Job-Step-Information"><a href="#3-2-Viewing-Job-and-Job-Step-Information" class="headerlink" title="3.2. Viewing Job and Job Step Information"></a>3.2. Viewing Job and Job Step Information</h3><p>To view all jobs or your specific jobs, use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">squeue</span><br></pre></td></tr></table></figure><p>For only your jobs, add the <code>--me</code> flag:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">squeue --me</span><br></pre></td></tr></table></figure><h3 id="3-3-Allocating-Resources"><a href="#3-3-Allocating-Resources" class="headerlink" title="3.3. Allocating Resources"></a>3.3. Allocating Resources</h3><p>You can allocate resources by requesting a set of nodes and processors. For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salloc -N1 -n24</span><br></pre></td></tr></table></figure><p>To allocate a specific workstation:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salloc -w ws-l6-007</span><br></pre></td></tr></table></figure><h2 id="4-Managing-Persistent-Sessions-with-Tmux"><a href="#4-Managing-Persistent-Sessions-with-Tmux" class="headerlink" title="4. Managing Persistent Sessions with Tmux"></a>4. Managing Persistent Sessions with Tmux</h2><p>Tmux is an essential tool for anyone working on long-running tasks or multiple sessions in an HPC environment. With Tmux, your sessions remain active even if you disconnect, ensuring that your tasks continue uninterrupted.</p><h3 id="4-1-Starting-a-Tmux-Session"><a href="#4-1-Starting-a-Tmux-Session" class="headerlink" title="4.1. Starting a Tmux Session"></a>4.1. Starting a Tmux Session</h3><p>To start a basic Tmux session, simply type:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure><h3 id="4-2-Creating-Named-Tmux-Sessions"><a href="#4-2-Creating-Named-Tmux-Sessions" class="headerlink" title="4.2. Creating Named Tmux Sessions"></a>4.2. Creating Named Tmux Sessions</h3><p>If you manage multiple Tmux sessions, it’s useful to name them. Start a new named session like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new -s session_name</span><br></pre></td></tr></table></figure><h3 id="4-3-Detaching-from-a-Tmux-Session"><a href="#4-3-Detaching-from-a-Tmux-Session" class="headerlink" title="4.3. Detaching from a Tmux Session"></a>4.3. Detaching from a Tmux Session</h3><p>You can temporarily leave a Tmux session by detaching from it with:</p><p><kbd>Ctrl</kbd> + <kbd>b</kbd> then <kbd>d</kbd></p><p>This allows your processes to continue running in the background.</p><h3 id="4-4-Re-attaching-to-a-Tmux-Session"><a href="#4-4-Re-attaching-to-a-Tmux-Session" class="headerlink" title="4.4. Re-attaching to a Tmux Session"></a>4.4. Re-attaching to a Tmux Session</h3><p>To reconnect to a Tmux session, first list all running sessions:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>Identify the session name from the list and re-attach using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux attach-session -t session_name</span><br></pre></td></tr></table></figure><p>For example, to re-attach to a session named <code>0</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux attach-session -t 0</span><br></pre></td></tr></table></figure><h2 id="5-Conclusion"><a href="#5-Conclusion" class="headerlink" title="5. Conclusion"></a>5. Conclusion</h2><p>Leveraging SSH, Slurm, and Tmux effectively can significantly improve your productivity and resource management on the MBZUAI HPC. With these tools, you can confidently manage your jobs, maintain persistent sessions, and ensure that your computational tasks are running smoothly, even in your absence.</p><h2 id="6-Additional-Info"><a href="#6-Additional-Info" class="headerlink" title="6. Additional Info"></a>6. Additional Info</h2><p>The terminal command activate code.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base)  127  ws-l1-007:~ $</span><br><span class="line">module load VSCODE</span><br><span class="line">(base)  0  ws-l1-007:~ $</span><br><span class="line">code</span><br><span class="line">(base)  0  ws-l1-007:~ $</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>在高性能计算（HPC）系统上工作需要对工具和流程有一个清晰的理解，以便有效地管理资源。本指南涵盖了使用SSH访问MBZUAI HPC环境、使用Slurm管理作业以及使用Tmux保持持久会话的关键步骤。无论你是初学者还是希望精进技能，这篇博文都将帮助你充分利用HPC的体验。</p><h2 id="1-快速访问链接"><a href="#1-快速访问链接" class="headerlink" title="1. 快速访问链接"></a>1. 快速访问链接</h2><p>在深入技术细节之前，请确保你可以轻松访问这些重要资源：</p><ul><li><a href="https://computinglabswiki.mbzuai.ac.ae/">计算实验室Wiki</a></li></ul><h2 id="2-通过SSH访问HPC"><a href="#2-通过SSH访问HPC" class="headerlink" title="2. 通过SSH访问HPC"></a>2. 通过SSH访问HPC</h2><p>要访问MBZUAI HPC，你需要使用SSH。以下是访问实验室工作站的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host MBZUAI_lab_workstation</span><br><span class="line">    HostName login-student-lab.mbzu.ae</span><br><span class="line">    User haobo.yang</span><br></pre></td></tr></table></figure><h2 id="3-使用Slurm管理资源"><a href="#3-使用Slurm管理资源" class="headerlink" title="3. 使用Slurm管理资源"></a>3. 使用Slurm管理资源</h2><p>Slurm是一个强大的工作负载管理器，帮助分配和管理HPC系统上的计算资源。以下是一些关键命令，帮助你入门：</p><h3 id="3-1-查看分区和节点信息"><a href="#3-1-查看分区和节点信息" class="headerlink" title="3.1. 查看分区和节点信息"></a>3.1. 查看分区和节点信息</h3><p>要查看可用的分区和节点，请使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sinfo</span><br></pre></td></tr></table></figure><h3 id="3-2-查看作业和作业步骤信息"><a href="#3-2-查看作业和作业步骤信息" class="headerlink" title="3.2. 查看作业和作业步骤信息"></a>3.2. 查看作业和作业步骤信息</h3><p>要查看所有作业或特定作业，请使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">squeue</span><br></pre></td></tr></table></figure><p>如果只查看你自己的作业，添加 <code>--me</code> 参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">squeue --me</span><br></pre></td></tr></table></figure><h3 id="3-3-分配资源"><a href="#3-3-分配资源" class="headerlink" title="3.3. 分配资源"></a>3.3. 分配资源</h3><p>你可以通过请求一组节点和处理器来分配资源。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salloc -N1 -n24</span><br></pre></td></tr></table></figure><p>要分配一个特定的工作站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salloc -w ws-l6-007</span><br></pre></td></tr></table></figure><h2 id="4-使用Tmux管理持久会话"><a href="#4-使用Tmux管理持久会话" class="headerlink" title="4. 使用Tmux管理持久会话"></a>4. 使用Tmux管理持久会话</h2><p>Tmux是一个对任何在HPC环境中进行长时间任务或管理多个会话的人来说非常重要的工具。通过Tmux，即使你断开连接，你的会话也会继续保持活动状态，确保你的任务不间断地运行。</p><h3 id="4-1-启动Tmux会话"><a href="#4-1-启动Tmux会话" class="headerlink" title="4.1. 启动Tmux会话"></a>4.1. 启动Tmux会话</h3><p>要启动一个基本的Tmux会话，只需键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure><h3 id="4-2-创建命名Tmux会话"><a href="#4-2-创建命名Tmux会话" class="headerlink" title="4.2. 创建命名Tmux会话"></a>4.2. 创建命名Tmux会话</h3><p>如果你需要管理多个Tmux会话，命名它们是很有用的。以以下方式启动一个新的命名会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new -s session_name</span><br></pre></td></tr></table></figure><h3 id="4-3-从Tmux会话中分离"><a href="#4-3-从Tmux会话中分离" class="headerlink" title="4.3. 从Tmux会话中分离"></a>4.3. 从Tmux会话中分离</h3><p>你可以通过以下方式暂时离开一个Tmux会话：</p><p><kbd>Ctrl</kbd> + <kbd>b</kbd> 然后 <kbd>d</kbd></p><p>这允许你的进程在后台继续运行。</p><h3 id="4-4-重新连接到Tmux会话"><a href="#4-4-重新连接到Tmux会话" class="headerlink" title="4.4. 重新连接到Tmux会话"></a>4.4. 重新连接到Tmux会话</h3><p>要重新连接到Tmux会话，首先列出所有正在运行的会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>从列表中识别会话名称并使用以下命令重新连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux attach-session -t session_name</span><br></pre></td></tr></table></figure><p>例如，要重新连接到名为 <code>0</code> 的会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux attach-session -t 0</span><br></pre></td></tr></table></figure><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5. 结论"></a>5. 结论</h2><p>有效利用SSH、Slurm和Tmux可以显著提高你在MBZUAI HPC上的生产力和资源管理能力。通过这些工具，你可以自信地管理作业，保持持久会话，并确保你的计算任务即使在你不在时也能顺利运行。</p><h2 id="6-补充说明"><a href="#6-补充说明" class="headerlink" title="6. 补充说明"></a>6. 补充说明</h2><p>The terminal command activate code.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base)  127  ws-l1-007:~ $</span><br><span class="line">module load VSCODE</span><br><span class="line">(base)  0  ws-l1-007:~ $</span><br><span class="line">code</span><br><span class="line">(base)  0  ws-l1-007:~ $</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;English Version&lt;/button&gt;&lt;/li&gt;&lt;li c</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="HPC" scheme="https://discover304.top/tags/HPC/"/>
    
    <category term="SSH" scheme="https://discover304.top/tags/SSH/"/>
    
    <category term="Slurm" scheme="https://discover304.top/tags/Slurm/"/>
    
    <category term="Tmux" scheme="https://discover304.top/tags/Tmux/"/>
    
    <category term="Resource Management" scheme="https://discover304.top/tags/Resource-Management/"/>
    
  </entry>
  
  <entry>
    <title>【课题】Decifer音乐项目与LLM Repo Eval项目</title>
    <link href="https://discover304.top/2024/07/02/2024q3/187-music-x-lab-other-research/"/>
    <id>https://discover304.top/2024/07/02/2024q3/187-music-x-lab-other-research/</id>
    <published>2024-07-01T21:58:10.000Z</published>
    <updated>2024-08-20T17:45:11.914Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注：AI 整理，仅作参考</p></blockquote><h2 id="1-Decifer音乐生成项目"><a href="#1-Decifer音乐生成项目" class="headerlink" title="1. Decifer音乐生成项目"></a>1. Decifer音乐生成项目</h2><h3 id="1-1-项目概述"><a href="#1-1-项目概述" class="headerlink" title="1.1. 项目概述"></a>1.1. 项目概述</h3><p>Decifer项目致力于开发一个利用音频语言模型（Y）指导MIDI语言模型（X）的跨模态音乐生成模型。</p><h3 id="1-2-技术细节"><a href="#1-2-技术细节" class="headerlink" title="1.2. 技术细节"></a>1.2. 技术细节</h3><ul><li><strong>数据收集</strong>：收集大量的MIDI和相应的音频数据。</li><li><strong>模型蒸馏</strong>：音频模型作为导师模型，将知识传递给MIDI模型。</li><li><strong>跨模态学习</strong>：实现音频输出到MIDI输入的映射，促进两个模型的互动学习。</li></ul><h2 id="2-LLM-Repo-Eval项目：GitHub仓库评估"><a href="#2-LLM-Repo-Eval项目：GitHub仓库评估" class="headerlink" title="2. LLM Repo Eval项目：GitHub仓库评估"></a>2. LLM Repo Eval项目：GitHub仓库评估</h2><h3 id="2-1-项目目标"><a href="#2-1-项目目标" class="headerlink" title="2.1. 项目目标"></a>2.1. 项目目标</h3><p>利用大型语言模型评估GitHub仓库的效率、资源开销、部署或开发难易程度。</p><h3 id="2-2-实施步骤"><a href="#2-2-实施步骤" class="headerlink" title="2.2. 实施步骤"></a>2.2. 实施步骤</h3><ul><li><strong>确定评估标准</strong>：包括代码质量、工程质量、使用体验、部署和配置等。</li><li><strong>设计评估工具和方法</strong>：选择合适的代码分析和性能分析工具。</li><li><strong>收集数据</strong>：运行和测试GitHub仓库，收集性能数据和用户反馈。</li><li><strong>数据分析</strong>：分析收集到的数据，评估GitHub仓库的综合表现。</li></ul><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>这两个项目通过使用先进的AI技术解决特定领域问题，展示了AI在音乐生成和软件工程质量评估中的应用潜力。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>（工程文件）<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注：AI 整理，仅作参考&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-Decifer音乐生成项目&quot;&gt;&lt;a href=&quot;#1-Decifer音乐生成项目&quot; class=&quot;headerlink&quot; title=&quot;1. Decifer音乐生成项</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="AI" scheme="https://discover304.top/tags/AI/"/>
    
    <category term="Music Generation" scheme="https://discover304.top/tags/Music-Generation/"/>
    
    <category term="Cross-modal Learning" scheme="https://discover304.top/tags/Cross-modal-Learning/"/>
    
    <category term="Large Language Models" scheme="https://discover304.top/tags/Large-Language-Models/"/>
    
    <category term="GitHub Evaluation" scheme="https://discover304.top/tags/GitHub-Evaluation/"/>
    
  </entry>
  
  <entry>
    <title>The Role of Vector Stores in Similarity Search and Indexing</title>
    <link href="https://discover304.top/2024/06/29/2024q2/186-vs/"/>
    <id>https://discover304.top/2024/06/29/2024q2/186-vs/</id>
    <published>2024-06-29T14:39:55.000Z</published>
    <updated>2024-08-20T17:54:47.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="what-is-the-purpose-to-have-vector-store-for-similarity-check-and-indexing-the-relevant-context-material"><a href="#what-is-the-purpose-to-have-vector-store-for-similarity-check-and-indexing-the-relevant-context-material" class="headerlink" title="what is the purpose to have vector store? for similarity check and indexing the relevant context material?"></a>what is the purpose to have vector store? for similarity check and indexing the relevant context material?</h2><p>A vector store is primarily used for efficiently managing and querying vector data, which is essential for tasks such as similarity checks and indexing relevant context material. Here are the key purposes of having a vector store:</p><ol><li><p><strong>Similarity Search</strong>:</p><ul><li><strong>Efficient Retrieval</strong>: When dealing with high-dimensional data such as word embeddings, image embeddings, or other feature vectors, vector stores allow for efficient similarity searches. This is crucial for applications like recommendation systems, image recognition, and natural language processing, where finding similar items quickly is essential.</li><li><strong>Distance Metrics</strong>: Vector stores typically support various distance metrics (e.g., cosine similarity, Euclidean distance) to measure the similarity between vectors, enabling the retrieval of the most relevant items based on their vector representations.</li></ul></li><li><p><strong>Indexing Relevant Context Material</strong>:</p><ul><li><strong>Contextual Search</strong>: By indexing vectors, a vector store allows for quick retrieval of contextually relevant information. For example, in a document retrieval system, sentences or paragraphs can be converted into vectors and stored, making it possible to fetch the most relevant context based on a query vector.</li><li><strong>Scalability</strong>: Vector stores are designed to handle large volumes of vector data, supporting scalability in applications that require processing and searching through vast amounts of information.</li></ul></li><li><p><strong>Integration with Machine Learning Models</strong>:</p><ul><li><strong>Embedding Management</strong>: Many machine learning models, particularly in NLP and computer vision, generate embeddings that represent data points in a high-dimensional space. A vector store provides a structured way to store and manage these embeddings.</li><li><strong>Inference and Real-time Applications</strong>: In real-time applications such as chatbots or voice assistants, vector stores enable rapid retrieval of relevant responses or actions based on the embeddings of user queries.</li></ul></li><li><p><strong>Optimization for Query Performance</strong>:</p><ul><li><strong>Index Structures</strong>: Vector stores use specialized index structures like KD-Trees, Ball Trees, or more advanced methods like HNSW (Hierarchical Navigable Small World graphs) to optimize the performance of nearest neighbor searches.</li><li><strong>Approximate Nearest Neighbor (ANN) Search</strong>: To further enhance performance, vector stores often implement ANN algorithms, which provide faster results with a trade-off of some approximation, suitable for large-scale and real-time systems.</li></ul></li><li><p><strong>Data Management and Versioning</strong>:</p><ul><li><strong>Update and Maintain Vectors</strong>: Vector stores often include functionalities for updating and maintaining vector data, which is essential as the underlying data or the models generating the embeddings evolve.</li><li><strong>Version Control</strong>: Some vector stores support versioning of vectors, allowing for tracking changes and maintaining consistency across different versions of the data.</li></ul></li></ol><p>Overall, vector stores are vital for handling the complexities associated with high-dimensional vector data, providing the infrastructure needed for efficient similarity searches, contextual indexing, and integration with various machine learning workflows.</p><h2 id="what-is-the-purpose-to-have-vector-store-for-chatgpt"><a href="#what-is-the-purpose-to-have-vector-store-for-chatgpt" class="headerlink" title="what is the purpose to have vector store for chatgpt?"></a>what is the purpose to have vector store for chatgpt?</h2><p>The purpose of having a vector store for ChatGPT or similar AI models is to enhance the retrieval of relevant information and improve the model’s performance in several ways:</p><h3 id="1-Efficient-Information-Retrieval"><a href="#1-Efficient-Information-Retrieval" class="headerlink" title="1. Efficient Information Retrieval"></a>1. Efficient Information Retrieval</h3><p>A vector store allows for efficient retrieval of relevant documents or data points based on their semantic similarity. Instead of relying solely on keyword matching, vectors capture the meaning of text, enabling more accurate and relevant search results.</p><h3 id="2-Enhanced-Contextual-Understanding"><a href="#2-Enhanced-Contextual-Understanding" class="headerlink" title="2. Enhanced Contextual Understanding"></a>2. Enhanced Contextual Understanding</h3><p>Vector stores can store embeddings of text, which encapsulate the semantic context of the information. This helps in understanding and retrieving information that is contextually similar, even if it does not contain the exact keywords used in the query.</p><h3 id="3-Scaling-Large-Datasets"><a href="#3-Scaling-Large-Datasets" class="headerlink" title="3. Scaling Large Datasets"></a>3. Scaling Large Datasets</h3><p>As the amount of data grows, traditional search methods become less efficient. Vector stores enable scalable and fast retrieval from large datasets, making it feasible to handle and search through extensive corpora.</p><h3 id="4-Personalization-and-Recommendations"><a href="#4-Personalization-and-Recommendations" class="headerlink" title="4. Personalization and Recommendations"></a>4. Personalization and Recommendations</h3><p>Vector embeddings can be used to understand user preferences and behaviors. By storing user interactions as vectors, the model can provide personalized responses and recommendations based on the user’s past queries and interactions.</p><h3 id="5-Semantic-Search-Capabilities"><a href="#5-Semantic-Search-Capabilities" class="headerlink" title="5. Semantic Search Capabilities"></a>5. Semantic Search Capabilities</h3><p>Vector stores enable semantic search, where the search engine understands the meaning behind the query and retrieves information that matches the intent rather than just the keywords. This results in more accurate and relevant responses.</p><h3 id="6-Knowledge-Integration"><a href="#6-Knowledge-Integration" class="headerlink" title="6. Knowledge Integration"></a>6. Knowledge Integration</h3><p>Incorporating a vector store allows for the integration of external knowledge bases with the model. This means that the model can access a broader range of information beyond its training data, improving the accuracy and breadth of responses.</p><h3 id="7-Real-time-Updates"><a href="#7-Real-time-Updates" class="headerlink" title="7. Real-time Updates"></a>7. Real-time Updates</h3><p>Vector stores can be updated in real-time with new information, ensuring that the model has access to the most current data and can respond accurately to time-sensitive queries.</p><h3 id="Implementation-Aspects"><a href="#Implementation-Aspects" class="headerlink" title="Implementation Aspects:"></a>Implementation Aspects:</h3><ul><li><strong>Vector Embeddings</strong>: Text is converted into high-dimensional vectors using embedding techniques like BERT, GPT, or other neural network-based models.</li><li><strong>Storage and Indexing</strong>: These vectors are stored in a database optimized for vector search (e.g., Faiss, Annoy).</li><li><strong>Similarity Search</strong>: When a query is made, its vector representation is compared with stored vectors to find the most similar ones using methods like cosine similarity</li></ul><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;what-is-the-purpose-to-have-vector-store-for-similarity-check-and-indexing-the-relevant-context-material&quot;&gt;&lt;a href=&quot;#what-is-the-purp</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="Vector Store" scheme="https://discover304.top/tags/Vector-Store/"/>
    
    <category term="Similarity Search" scheme="https://discover304.top/tags/Similarity-Search/"/>
    
    <category term="Indexing" scheme="https://discover304.top/tags/Indexing/"/>
    
    <category term="Machine Learning" scheme="https://discover304.top/tags/Machine-Learning/"/>
    
    <category term="AI" scheme="https://discover304.top/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>ChuanhuChatbot: Multimodal Input Handling and Evaluation</title>
    <link href="https://discover304.top/2024/06/29/2024q2/185-1-mn-chuanhu/"/>
    <id>https://discover304.top/2024/06/29/2024q2/185-1-mn-chuanhu/</id>
    <published>2024-06-29T11:51:26.000Z</published>
    <updated>2024-08-20T17:54:50.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-ChuanhuChatbot-py"><a href="#1-ChuanhuChatbot-py" class="headerlink" title="1. ChuanhuChatbot.py"></a>1. ChuanhuChatbot.py</h2><p>user_input</p><p>chatgpt_predict_args<br>auto_name_chat_history_args</p><h2 id="2-base-model-py"><a href="#2-base-model-py" class="headerlink" title="2. base_model.py"></a>2. base_model.py</h2><p>prepare_inputs<br>real_inputs<br>fake_inputs&#x2F;fake_input<br>注：inputs是针对带有多模态输入的信息，input是只有文本</p><p><img src="https://image.discover304.top/1719669586535.png" alt="1719669586535.png"></p><p>history<br>stream_next_chatbot</p><p><img src="https://image.discover304.top/1719669830253.png" alt="1719669830253.png"></p><p><img src="https://image.discover304.top/1719668922689.png" alt="1719668922689.png"></p><p><img src="https://image.discover304.top/1719669278998.png" alt="1719669278998.png"></p><p>get_answer_stream_iter (different model has different implementation of this function)</p><p><img src="https://image.discover304.top/1719669925926.png" alt="1719669925926.png"></p><p>PROMPT_TEMPLATE (in file: presets.py)</p><p><img src="https://image.discover304.top/1719670018110.png" alt="1719670018110.png"></p><h2 id="3-TODO-for-MultiverseNote-implementation"><a href="#3-TODO-for-MultiverseNote-implementation" class="headerlink" title="3. TODO for MultiverseNote implementation"></a>3. TODO for MultiverseNote implementation</h2><p><img src="https://image.discover304.top/1719670998080.png" alt="1719670998080.png"></p><p><img src="https://image.discover304.top/1719672602383.png" alt="1719672602383.png"></p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-ChuanhuChatbot-py&quot;&gt;&lt;a href=&quot;#1-ChuanhuChatbot-py&quot; class=&quot;headerlink&quot; title=&quot;1. ChuanhuChatbot.py&quot;&gt;&lt;/a&gt;1. ChuanhuChatbot.py&lt;/h2&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="ChuanhuChatbot" scheme="https://discover304.top/tags/ChuanhuChatbot/"/>
    
    <category term="Multimodal Input" scheme="https://discover304.top/tags/Multimodal-Input/"/>
    
    <category term="AI Development" scheme="https://discover304.top/tags/AI-Development/"/>
    
  </entry>
  
  <entry>
    <title>Leveraging Embedding Indices in ChuanhuChatGPT: A Comprehensive Guide</title>
    <link href="https://discover304.top/2024/06/29/2024q2/185-0-mn-chuanhu-explain/"/>
    <id>https://discover304.top/2024/06/29/2024q2/185-0-mn-chuanhu-explain/</id>
    <published>2024-06-29T03:03:52.000Z</published>
    <updated>2024-08-20T17:54:52.431Z</updated>
    
    <content type="html"><![CDATA[<p>ChuanhuChatGPT is an advanced GUI for interacting with the ChatGPT API and various large language models (LLMs). Among its numerous features, it includes robust functionalities for saving and managing chat history and embedding indices. This guide will provide an overview of how to set up and utilize these features effectively.</p><h3 id="1-Setting-Up-the-Setup-Wizard"><a href="#1-Setting-Up-the-Setup-Wizard" class="headerlink" title="1. Setting Up the Setup Wizard"></a>1. Setting Up the Setup Wizard</h3><p>The <code>setup_wizard</code> function initializes the setup process if the <code>config.json</code> file is not found. This function configures several key settings, including local embeddings and methods for naming conversation histories.</p><h4 id="1-1-Path-to-setup-wizard"><a href="#1-1-Path-to-setup-wizard" class="headerlink" title="1.1. Path to setup_wizard:"></a>1.1. Path to <code>setup_wizard</code>:</h4><ul><li><strong>File</strong>: <code>modules/utils.py</code></li><li><strong>Location</strong>: Defined starting at line 1059</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup_wizard</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;config.json&quot;</span>):</span><br><span class="line">        wizard = SetupWizard()</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        wizard[<span class="string">&quot;multi_api_key&quot;</span>] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Setting local_embedding</span></span><br><span class="line">        wizard.<span class="built_in">set</span>(</span><br><span class="line">            [</span><br><span class="line">                ConfigItem(<span class="string">&quot;local_embedding&quot;</span>, <span class="string">&quot;本地编制索引&quot;</span>, <span class="built_in">type</span>=ConfigType.Bool),</span><br><span class="line">                <span class="string">&quot;是否在本地编制知识库索引？如果是，可以在使用本地模型时离线使用知识库，否则使用OpenAI服务来编制索引（需要OpenAI API Key）。请确保你的电脑有至少16GB内存。&quot;</span></span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            colorama.Back.GREEN + i18n(<span class="string">&quot;现在开始设置其他在线模型的API Key&quot;</span>) + colorama.Style.RESET_ALL</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Auto naming chat history</span></span><br><span class="line">        wizard.<span class="built_in">set</span>(</span><br><span class="line">            [</span><br><span class="line">                ConfigItem(</span><br><span class="line">                    <span class="string">&quot;chat_name_method_index&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;自动命名对话历史的方式(0: 使用日期时间命名, 1: 使用第一条提问命名, 2: 使用模型自动总结。)&quot;</span>,</span><br><span class="line">                    <span class="built_in">type</span>=ConfigType.Number,</span><br><span class="line">                    default=<span class="number">2</span>,</span><br><span class="line">                )</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;是否选择自动命名对话历史的方式？&quot;</span></span><br><span class="line">        )</span><br></pre></td></tr></table></figure><h3 id="2-Managing-Chat-History-Exporting-to-JSON-and-Markdown"><a href="#2-Managing-Chat-History-Exporting-to-JSON-and-Markdown" class="headerlink" title="2. Managing Chat History: Exporting to JSON and Markdown"></a>2. Managing Chat History: Exporting to JSON and Markdown</h3><h4 id="2-1-Export-to-JSON"><a href="#2-1-Export-to-JSON" class="headerlink" title="2.1. Export to JSON"></a>2.1. Export to JSON</h4><p>To save chat history in JSON format, the functionality is implemented within <code>ChuanhuChatbot.py</code>, handling session states and user interactions.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_history_to_json</span>(<span class="params">chat_history, file_path=<span class="string">&#x27;chat_history.json&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(chat_history, f, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h4 id="2-2-Export-to-Markdown"><a href="#2-2-Export-to-Markdown" class="headerlink" title="2.2. Export to Markdown"></a>2.2. Export to Markdown</h4><p>To export chat history to Markdown, you can format the conversation entries appropriately and save them as a Markdown file.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">save_history_to_markdown</span>(<span class="params">chat_history, file_path=<span class="string">&#x27;chat_history.md&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> entry <span class="keyword">in</span> chat_history:</span><br><span class="line">            f.write(<span class="string">f&quot;### <span class="subst">&#123;entry[<span class="string">&#x27;role&#x27;</span>]&#125;</span>\n\n<span class="subst">&#123;entry[<span class="string">&#x27;content&#x27;</span>]&#125;</span>\n\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Sample usage</span></span><br><span class="line">chat_history = [</span><br><span class="line">    &#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;What is the capital of France?&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;assistant&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;The capital of France is Paris.&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">save_history_to_markdown(chat_history)</span><br></pre></td></tr></table></figure><h3 id="3-Handling-Embedding-Indices-with-FAISS"><a href="#3-Handling-Embedding-Indices-with-FAISS" class="headerlink" title="3. Handling Embedding Indices with FAISS"></a>3. Handling Embedding Indices with FAISS</h3><p>FAISS is used in ChuanhuChatGPT for efficient storage and retrieval of text embeddings, enabling powerful search and query capabilities.</p><h4 id="3-1-Creating-and-Saving-Embeddings"><a href="#3-1-Creating-and-Saving-Embeddings" class="headerlink" title="3.1. Creating and Saving Embeddings"></a>3.1. Creating and Saving Embeddings</h4><ul><li><strong>File</strong>: <code>modules/index_func.py</code></li><li><strong>Function</strong>: Embedding creation and saving</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.vectorstores <span class="keyword">import</span> FAISS</span><br><span class="line"><span class="keyword">from</span> langchain.embeddings.openai <span class="keyword">import</span> OpenAIEmbeddings</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_and_save_index</span>(<span class="params">documents, index_path=<span class="string">&#x27;faiss.index&#x27;</span></span>):</span><br><span class="line">    embeddings = OpenAIEmbeddings()</span><br><span class="line">    index = FAISS.from_documents(documents, embeddings)</span><br><span class="line">    index.save(index_path)</span><br></pre></td></tr></table></figure><h4 id="3-2-Loading-the-Index"><a href="#3-2-Loading-the-Index" class="headerlink" title="3.2. Loading the Index"></a>3.2. Loading the Index</h4><p>Load the saved FAISS index for efficient querying of stored embeddings.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">load_index</span>(<span class="params">index_path=<span class="string">&#x27;faiss.index&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">return</span> FAISS.load(index_path)</span><br></pre></td></tr></table></figure><h3 id="4-Conclusion"><a href="#4-Conclusion" class="headerlink" title="4. Conclusion"></a>4. Conclusion</h3><p>ChuanhuChatGPT offers extensive capabilities for managing chat history and embedding indices. By leveraging these features, you can ensure efficient storage, retrieval, and documentation of your interactions. For detailed implementation and updates, refer to the <a href="https://github.com/GaiZhenbiao/ChuanhuChatGPT">ChuanhuChatGPT repository</a> on GitHub【21†source】【22†source】【23†source】【24†source】【25†source】. </p><p>These features enhance the usability and flexibility of ChuanhuChatGPT, making it a robust tool for interacting with and managing large language models.</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ChuanhuChatGPT is an advanced GUI for interacting with the ChatGPT API and various large language models (LLMs). Among its numerous featu</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="ChuanhuChatGPT" scheme="https://discover304.top/tags/ChuanhuChatGPT/"/>
    
    <category term="Embedding" scheme="https://discover304.top/tags/Embedding/"/>
    
    <category term="FAISS" scheme="https://discover304.top/tags/FAISS/"/>
    
    <category term="AI Tools" scheme="https://discover304.top/tags/AI-Tools/"/>
    
  </entry>
  
  <entry>
    <title>【社区】如何有效运营社区：知识建设、多元化发展与治理结构</title>
    <link href="https://discover304.top/2024/06/26/2024q2/184-society/"/>
    <id>https://discover304.top/2024/06/26/2024q2/184-society/</id>
    <published>2024-06-26T09:39:47.000Z</published>
    <updated>2024-08-20T17:54:54.844Z</updated>
    
    <content type="html"><![CDATA[<p>在当今互联网时代，社区的意义已经远超过了传统的地理界限，它可以是基于兴趣、学术或特定目的的集体。然而，无论是线上社区还是线下团体，有效的运营策略都是其成功的关键。以下是我对如何高效运营一个社区的一些思考。</p><h3 id="1-知识与自媒体的重要性"><a href="#1-知识与自媒体的重要性" class="headerlink" title="1. 知识与自媒体的重要性"></a>1. <strong>知识与自媒体的重要性</strong></h3><p>一个社区的核心在于其传递的理念和知识。因此，建立一套完善的知识结构非常关键。这不仅涉及到知识的创造和积累，更包括如何通过自媒体渠道有效传播这些理念。自媒体的运用可以帮助我们获得更广泛的话语权，并且能够吸引更多志同道合的人士加入我们的行列。</p><p>通过定期发布高质量的内容，我们可以在相关领域建立权威，同时，这也是一个持续的资金流入渠道，可以支持社区的持续发展和独立运作。例如，可以通过博客文章、视频教程、在线研讨会等形式，分享专业知识或行业动态。</p><h3 id="2-推行多元化和开放的社区文化"><a href="#2-推行多元化和开放的社区文化" class="headerlink" title="2. 推行多元化和开放的社区文化"></a>2. <strong>推行多元化和开放的社区文化</strong></h3><p>社区不应仅仅局限于一个领域，比如科研，而应该是一个多元化和开放的平台。这意味着，我们应该鼓励和容纳多种形式的活动和观点，从文化活动到教育课程，甚至是休闲娱乐等。这种多元化可以增加社区的吸引力，同时也能够满足更广泛成员的需求和兴趣。</p><p>例如，可以设立主题日或者工作坊，邀请不同领域的专家来分享他们的知识和经验，或者开展社区内的小型项目竞赛，激发成员之间的交流与合作。</p><h3 id="3-建立有效的治理结构"><a href="#3-建立有效的治理结构" class="headerlink" title="3. 建立有效的治理结构"></a>3. <strong>建立有效的治理结构</strong></h3><p>对于一个从较小团体，如学校社团独立出来的组织，建立一套有效的治理结构尤为重要。这包括但不限于设置理事会和相关的管理职位。这些结构不仅确保决策的透明度和高效性，还能够处理内部的管理事务，保证社区的长远发展和稳定运行。</p><p>理事会应该由不同背景的成员组成，以确保多样性和广泛的视角。同时，定期的会议和成员大会可以帮助确保所有成员都能参与到社区的发展中来，增强归属感和参与感。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>有效运营一个社区需要明确的目标、开放的态度以及坚实的管理基础。通过上述三个核心策略，我们不仅能够促进知识的传播和吸引更多成员，还可以确保社区的健康发展和持久生命力。希望我的这些想法能给正在运营或希望创建社区的你一些启发和帮助。</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.g/nn5NDXMgae">AierLab</a>（人工智能社区）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在当今互联网时代，社区的意义已经远超过了传统的地理界限，它可以是基于兴趣、学术或特定目的的集体。然而，无论是线上社区还是线下团体，有效的运营策略都是其成功的关键。以下是我对如何高效运营一个社区的一些思考。&lt;/p&gt;
&lt;h3 id=&quot;1-知识与自媒体的重要性&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="ThinkingNote" scheme="https://discover304.top/categories/NoteBook/ThinkingNote/"/>
    
    
    <category term="社区运营" scheme="https://discover304.top/tags/%E7%A4%BE%E5%8C%BA%E8%BF%90%E8%90%A5/"/>
    
    <category term="知识管理" scheme="https://discover304.top/tags/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/"/>
    
    <category term="多元化发展" scheme="https://discover304.top/tags/%E5%A4%9A%E5%85%83%E5%8C%96%E5%8F%91%E5%B1%95/"/>
    
    <category term="治理结构" scheme="https://discover304.top/tags/%E6%B2%BB%E7%90%86%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>ICLR2024 Emergent Communication With Conversational Repair</title>
    <link href="https://discover304.top/2024/06/25/2024q2/183-rl-call/"/>
    <id>https://discover304.top/2024/06/25/2024q2/183-rl-call/</id>
    <published>2024-06-25T07:22:38.000Z</published>
    <updated>2024-08-20T17:54:56.587Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Miscommunication-Drives-Abstraction"><a href="#1-Miscommunication-Drives-Abstraction" class="headerlink" title="1. Miscommunication Drives Abstraction"></a>1. Miscommunication Drives Abstraction</h3><p><strong>心理学层面的现象</strong> (Psychology-level Phenomenon)</p><p>根据Healey等人的基于修复的解释，这种修复序列允许对话者识别与其对话伙伴在指称表达的语义上的潜在解释分歧，然后通过互动方式解决这些分歧。通过一系列迷宫任务实验(Healey, 2007; Healey and Mills, 2006; Mills, 2014; Healey, Mills, et al. 2018)的发现提供了修复驱动的收敛证据。在这一任务中，成对的参与者共同解决迷宫问题。这使得参与者需要反复指称空间位置(参见图1的示例迷宫配置)。一个一致的发现是，参与者最初使用视觉显著特征描述迷宫，例如“伸出的部分”（”the sticking out part”），或“在臂的末端”（”at the end of the arm”）。在实验过程中，参与者逐渐使用更抽象的描述，例如“最长的第5排”（”longest row 5th square”），而最协调的对描述更抽象的矩阵描述（如“A5”，“2,1”或“第3行第4列”（”row 3 column 4”））。</p><hr><h3 id="2-Conversational-Repair"><a href="#2-Conversational-Repair" class="headerlink" title="2. Conversational Repair"></a>2. Conversational Repair</h3><p><strong>对话修复</strong> (Conversational Repair)</p><ul><li>自我发起 (Self-initiated) 与 他人发起 (Other-initiated)。</li><li>需要引用吗？ (Requires referencing?)</li><li>在符号前沟通 (Pre-symbolic communication) 中，可以修复吗？<ul><li>符号但不可组合的情况下如何？ (What about symbolic but not composable?)</li></ul></li></ul><p>对话修复使语言在语言上操作 (Conversational repair makes language operate on language)。</p><ul><li>最小案例？ (Minimum case?)</li></ul><p>探讨了对话修复在不同类型的沟通中的作用，特别是在非符号 (Non-symbolic) 和非可组合的符号 (Non-composable symbolic) 沟通中的可能性。对话修复被认为是语言处理的一部分，使得语言能够在语言层面进行操作。</p><hr><h3 id="3-Emergent-Communication-in-Reinforcement-Learning-RL-Experiment"><a href="#3-Emergent-Communication-in-Reinforcement-Learning-RL-Experiment" class="headerlink" title="3. Emergent Communication in Reinforcement Learning (RL) Experiment"></a>3. Emergent Communication in Reinforcement Learning (RL) Experiment</h3><p><strong>RL实验中的新奇点</strong> (Novelty in RL Experiment)</p><ul><li><p>在Lewis信号游戏 (Lewis Signaling Game) 中进行的RL实验。</p><ul><li>Lewis信号游戏：沟通 (Communication) 和协作 (Collaboration)。</li><li>沟通出现 (Communication emerges)。</li></ul></li><li><p>新奇点：</p><ul><li>噪声通道 (Noisy Channel)。</li><li>允许接收者反馈 (Allows recipient to give feedback)。</li><li>研究出现的语言如何响应噪声通道和接收者反馈。</li></ul></li></ul><p><strong>Lewis信号游戏</strong> (Lewis Signaling Game)</p><ul><li>玩家 (Players)：自然 (Nature, N)、发送者 (Sender)、接收者 (Receiver)。</li><li>自然的概率 ( q &#x3D; 0.5 )。</li><li>发送者看到自然状态并发送A&#x2F;B。</li><li>接收者行动X&#x2F;Y。</li><li>如果接收者对自然的判断正确，发送者和接收者会获得报酬。</li></ul><p><strong>[1]的RL实验</strong></p><ul><li><p>游戏中，干扰物体 ( O &#x3D; {o_1, o_2, …, o_{|O|}} )。</p></li><li><p>一个物体 ( o_j )： ( A \rightarrow V )。</p><ul><li>属性 ( A &#x3D; {a_1, a_2, …, a_{|A|}} )。</li><li>值 ( V &#x3D; {v_1, v_2, …, v_{|V|}} )。</li></ul></li><li><p>自然选择一个物体。维数为 ( |A| \cdot |V| )。</p></li><li><p>词汇 ( X &#x3D; {x_1, x_2, …, x_{|X|}} )。</p></li><li><p>一个消息 ( M &#x3D; [m_1, m_2, …, m_{|M|}] )，其中 ( m_t \in X )。</p></li><li><p>维数为 ( |X| \cdot |M| )。</p></li><li><p><strong>接收者的损失函数</strong> (Loss Function of Receiver)：</p><ul><li>( L_{receiver}(\theta_R) &#x3D; -\log(\pi_{\theta_R}(o_i|O, M)) )。</li></ul></li><li><p><strong>发送者的损失函数</strong> (Loss Function of Sender)：</p><ul><li>( L_{sender}(\theta_S) &#x3D; - \sum_{t&#x3D;0}^{|M|} r \cdot \log(\pi_{\theta_S}(m_t|o_i, m_{t-1})) )，其中 ( r &#x3D; 1 ) 如果接收者从干扰物体集合中选择了正确的物体，( r &#x3D; 0 ) 如果选择错误。</li></ul></li><li><p><strong>反馈机制</strong> (Feedback Mechanism)：</p><ul><li><p>我们设 ( |Y| &#x3D; 2 )，即接收者仅产生二元反馈。接收者可以使用反馈通道发送确认或开放澄清请求。</p></li><li><p><strong>带反馈的损失函数</strong> (Loss Functions with Feedback)：</p><ul><li>( L_{receiver-fb}(\theta_R) &#x3D; -\log(\pi_{\theta_R}(o_i|O, M’, N)) )。</li><li>( L_{sender-fb}(\theta_S) &#x3D; - \sum_{t&#x3D;0}^{|M|} r \cdot \log(\pi_{\theta_S}(m_t|o_i, m_{t-1}, n_{t-1})) )。</li></ul></li></ul></li></ul><p><strong>使用强化学习的原因</strong> (Reason for Using Reinforcement Learning)</p><p>由于接收者返回的信息是离散的，强化学习适用于处理这种离散的反馈信号。在这种情况下，传统的监督学习方法可能不太适用，因为反馈信号（即奖励或惩罚）不是连续的，而是离散的成功或失败指示。因此，强化学习提供了一种有效的方法来优化这种环境下的策略。</p><p><strong>具体实现细节</strong> (Implementation Details)</p><ol><li><p><strong>目标对象和干扰对象的选择</strong> (Selection of Target and Distractor Objects)：在每一轮游戏中，自然选择一个目标对象，并生成若干干扰对象。每个对象具有一组属性和值，定义了对象的特征空间。</p></li><li><p><strong>消息的生成和传递</strong> (Generation and Transmission of Messages)：发送者根据目标对象生成一个消息，该消息通过噪声通道传递给接收者。接收者根据接收到的消息和干扰对象集合选择目标对象。</p></li><li><p><strong>损失函数</strong> (Loss Functions)：发送者和接收者的损失函数分别用于优化各自的策略。发送者的损失函数基于接收者是否正确选择目标对象的反馈信号进行优化，而接收者的损失函数则基于接收者的选择与目标对象的匹配度进行优化。</p></li><li><p><strong>反馈机制</strong> (Feedback Mechanism)：接收者在接收到消息后，可以通过反馈通道向发送者提供二元反馈（正确或错误）。这种反馈机制帮助发送者调整消息生成策略，以提高通信的有效性。</p></li></ol><hr><h3 id="4-Quantifying-Compositionality"><a href="#4-Quantifying-Compositionality" class="headerlink" title="4. Quantifying Compositionality"></a>4. Quantifying Compositionality</h3><p><strong>如何量化组合性？</strong> (How to Quantify Compositionality?)</p><ul><li>使用拓扑相似性 (Topological Similarity)。</li><li>在[1]中，M-空间 (M-Space) 是自然的真实参数，( o_i ) 的 ( A \rightarrow V )。</li><li>从我们的角度来看：<ul><li>对于目标语言 ( L ) (Target Language ( L ))，使用 ( L ) 相对于人类概念的可解释性 (Interpretability with Respect to Human Concepts) 作为 ( L ) 组合性的代理 (Proxy for ( L )‘s Compositionality)。</li></ul></li></ul><p><strong>热图分析</strong> (Heatmap Analysis)</p><ul><li>Matthew’s相关系数 (Matthew’s Correlation Coefficient)：分析接收者消息与发送者消息中噪声的相关性。目的是了解反馈和噪声如何影响通信系统的效率。</li></ul><p><strong>实验结果</strong> (Experimental Results)</p><p>通过实验结果展示了在不同噪声水平下，系统的测试准确度 (Test Accuracy) 和拓扑相似性 (Topological Similarity)。结果表明，反馈机制在高噪声环境下显著提高了系统的鲁棒性和通信效率。</p><hr><h3 id="5-Discussions"><a href="#5-Discussions" class="headerlink" title="5. Discussions"></a>5. Discussions</h3><p><strong>讨论</strong> (Discussions)</p><ul><li>允许发送者和接收者之间的双向信息流时，可能双方共同构建相互理解，从而创建上下文化的意义。因此，发送者的消息变得不太具有组合性而更加依赖上下文。</li></ul><p><strong>进一步讨论</strong> (Further Discussions)</p><ul><li>当发送者和接收者之间的信息流是双向时，双方可能共同构建相互理解，从而创建上下文化的意义。结果，发送者的消息变得不太具有组合性而更加依赖上下文。这表明，在复杂的沟通环境中，系统需要在组合性和上下文依赖之间进行平衡，以实现有效的沟通。</li></ul><hr><h3 id="6-References"><a href="#6-References" class="headerlink" title="6. References"></a>6. References</h3><ol><li>Nikolaus, M. (2023, October). Emergent Communication with Conversational Repair. In The Twelfth International Conference on Learning Representations.</li><li>Brighton, H., &amp; Kirby, S. (2006). Understanding linguistic evolution by visualizing the emergence of topographic mappings. Artificial life, 12(2), 229-242.</li><li>Healey, P. G., Swoboda, N., Umata, I., &amp; King, J. (2007). Graphical language games: Interactional constraints on representational form. Cognitive science, 31(2), 285-309.</li><li>Mills, G., &amp; Redeker, G. (2022). Self-repair increases abstraction of referring expressions.</li><li>Lewis, D. (1969). Convention: A Philosophical Study. Harvard University Press, Harvard, Mass.</li><li>Lewis signaling game wiki. <a href="https://en.wikipedia.org/wiki/Lewis_signaling_game">Lewis signaling game</a></li><li>OpenReview. <a href="https://openreview.net/forum?id=Sy8upuD6Bw">Emergent Communication with Conversational Repair</a></li></ol><p><img src="https://image.discover304.top/1719300561111.png" alt="1719300561111.png"></p><p><img src="https://image.discover304.top/1719300550302.png" alt="1719300550302.png"></p><p><img src="https://image.discover304.top/1719300528503.png" alt="1719300528503.png"></p><p><img src="https://image.discover304.top/1719300502622.png" alt="1719300502622.png"></p><p><img src="https://image.discover304.top/1719300468349.png" alt="1719300468349.png"></p><p><img src="https://image.discover304.top/1719300411069.png" alt="1719300411069.png"></p><hr><blockquote><p><strong>🍀后记🍀</strong><br>博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-Miscommunication-Drives-Abstraction&quot;&gt;&lt;a href=&quot;#1-Miscommunication-Drives-Abstraction&quot; class=&quot;headerlink&quot; title=&quot;1. Miscommunicatio</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="ReadingNote" scheme="https://discover304.top/categories/NoteBook/ReadingNote/"/>
    
    
    <category term="ICLR2024" scheme="https://discover304.top/tags/ICLR2024/"/>
    
    <category term="Emergent Communication" scheme="https://discover304.top/tags/Emergent-Communication/"/>
    
    <category term="Conversational Repair" scheme="https://discover304.top/tags/Conversational-Repair/"/>
    
    <category term="Reinforcement Learning" scheme="https://discover304.top/tags/Reinforcement-Learning/"/>
    
    <category term="AI Research" scheme="https://discover304.top/tags/AI-Research/"/>
    
  </entry>
  
  <entry>
    <title>【网络模拟】Integrating Python in Ns-3 Simulations: A Study Note</title>
    <link href="https://discover304.top/2024/02/22/2024q1/182-ns3-simulation/"/>
    <id>https://discover304.top/2024/02/22/2024q1/182-ns3-simulation/</id>
    <published>2024-02-22T10:57:52.000Z</published>
    <updated>2024-03-10T03:49:35.223Z</updated>
    
    <content type="html"><![CDATA[<p>In this blog we will explored the utilization of ns-3 as a comprehensive network simulation tool and the integration of Python within C++ applications, focusing particularly on the use of PyBind11. This study note summarizes the key points, aiming to provide insights into the efficient use of ns-3 for simulating network scenarios and the innovative application of Python in C++ environments.</p><h2 id="ns-3-Nodes-and-Applications"><a href="#ns-3-Nodes-and-Applications" class="headerlink" title="ns-3: Nodes and Applications"></a>ns-3: Nodes and Applications</h2><p>ns-3 is a discrete-event network simulator, widely recognized for its versatility in simulating complex network topologies and protocols. It models the network into nodes (representing devices like routers, switches, or computers) and applications (simulating network services or traffic generation&#x2F;consumption).</p><h3 id="Key-Concepts"><a href="#Key-Concepts" class="headerlink" title="Key Concepts"></a>Key Concepts</h3><ul><li><p><strong>Nodes</strong>: In ns-3, nodes are the basic units representing devices within the network. Each node can simulate various components of a real network device, including network interfaces, protocol stacks, and applications.</p></li><li><p><strong>Applications</strong>: Applications in ns-3 are used to model the behavior of network services. They can be anything from simple UDP echo clients to more complex HTTP servers. ns-3 allows multiple applications to run on a single node, reflecting the multifunctional capabilities of real-world network devices.</p></li><li><p><strong>Relationship Between Nodes and Applications</strong>: The relationship is flexible—multiple applications can reside on a single node, and similar applications can be deployed across different nodes. This flexibility allows ns-3 to simulate a wide range of network scenarios and behaviors.</p></li></ul><h3 id="Simulation-Workflow"><a href="#Simulation-Workflow" class="headerlink" title="Simulation Workflow"></a>Simulation Workflow</h3><ol><li><strong>Setup Phase</strong>: Define the network topology, create nodes, and establish links.</li><li><strong>Application Configuration</strong>: Install applications on nodes to simulate network traffic.</li><li><strong>Execution Phase</strong>: Run the simulation, where nodes communicate through their applications over the defined network.</li><li><strong>Analysis</strong>: Utilize ns-3’s tools to analyze the simulation results, such as latency, packet loss, and throughput metrics.</li></ol><h2 id="Integrating-Python-in-C-with-PyBind11"><a href="#Integrating-Python-in-C-with-PyBind11" class="headerlink" title="Integrating Python in C++ with PyBind11"></a>Integrating Python in C++ with PyBind11</h2><p>While ns-3 simulations are primarily developed in C++, there’s often a need to leverage Python, especially for tasks involving data analysis or machine learning. PyBind11 serves as a bridge between Python and C++, enabling seamless integration.</p><h3 id="PyBind11-An-Overview"><a href="#PyBind11-An-Overview" class="headerlink" title="PyBind11: An Overview"></a>PyBind11: An Overview</h3><p>PyBind11 is a lightweight, header-only library that facilitates the binding of C++ and Python code. It allows for calling Python functions from C++ and vice versa, providing a powerful tool for integrating the extensive libraries and frameworks available in Python into C++ applications.</p><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pybind11/pybind11.h&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> py = pybind11;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">callPythonFunction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    py::scoped_interpreter guard&#123;&#125;; <span class="comment">// Start the Python interpreter</span></span><br><span class="line">    py::module_ myModule = py::module_::<span class="built_in">import</span>(<span class="string">&quot;my_python_module&quot;</span>);</span><br><span class="line">    myModule.<span class="built_in">attr</span>(<span class="string">&quot;my_function&quot;</span>)(); <span class="comment">// Assuming a function with no arguments</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Key-Advantages"><a href="#Key-Advantages" class="headerlink" title="Key Advantages"></a>Key Advantages</h3><ul><li><strong>Ease of Use</strong>: PyBind11 abstracts away much of the complexity involved in interfacing between C++ and Python, making it easier to integrate Python libraries or scripts into C++ applications.</li><li><strong>Efficiency</strong>: It provides a mechanism to directly call Python code from C++, potentially reducing the overhead compared to other methods like embedding the Python interpreter or using inter-process communication.</li><li><strong>Flexibility</strong>: PyBind11 supports a wide range of C++ and Python data types, facilitating complex interactions between the two languages.</li></ul><h3 id="Considerations"><a href="#Considerations" class="headerlink" title="Considerations"></a>Considerations</h3><ul><li><strong>Performance</strong>: While PyBind11 optimizes the interaction between C++ and Python, the performance implications of calling Python code from C++ should be considered, especially in performance-critical applications.</li><li><strong>Compilation</strong>: Integrating PyBind11 requires careful management of build configurations to ensure that both C++ and Python components are correctly compiled and linked.</li></ul><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Today’s exploration into ns-3’s simulation capabilities and the integration of Python within C++ applications using PyBind11 underscores the importance of these tools in network research and development. By leveraging ns-3’s flexible simulation environment and PyBind11’s seamless language integration, developers and researchers can create more comprehensive, realistic, and efficient network models and simulations.</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In this blog we will explored the utilization of ns-3 as a comprehensive network simulation tool and the integration of Python within C++</summary>
      
    
    
    
    <category term="NoteBook" scheme="https://discover304.top/categories/NoteBook/"/>
    
    <category term="TechNote" scheme="https://discover304.top/categories/NoteBook/TechNote/"/>
    
    
    <category term="技术" scheme="https://discover304.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="学习" scheme="https://discover304.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="参考" scheme="https://discover304.top/tags/%E5%8F%82%E8%80%83/"/>
    
    <category term="Python" scheme="https://discover304.top/tags/Python/"/>
    
    <category term="积累" scheme="https://discover304.top/tags/%E7%A7%AF%E7%B4%AF/"/>
    
    <category term="笔记" scheme="https://discover304.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="人工智能" scheme="https://discover304.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="网络" scheme="https://discover304.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="C++" scheme="https://discover304.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>PMR Basic Assumptions for Efficient Model Representation</title>
    <link href="https://discover304.top/2024/02/05/2024q1/181-2/"/>
    <id>https://discover304.top/2024/02/05/2024q1/181-2/</id>
    <published>2024-02-05T05:22:33.000Z</published>
    <updated>2024-05-31T09:58:47.688Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p><strong>🍀后记🍀</strong><br>Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;🍀后记🍀&lt;/strong&gt;&lt;br&gt;Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。&lt;br&gt;&lt;strong&gt;🌸唠嗑QQ群&lt;/strong&gt;：&lt;</summary>
      
    
    
    
    <category term="University" scheme="https://discover304.top/categories/University/"/>
    
    <category term="Probabilistic Modelling and Reasoning" scheme="https://discover304.top/categories/University/Probabilistic-Modelling-and-Reasoning/"/>
    
    
    <category term="笔记" scheme="https://discover304.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>180-2</title>
    <link href="https://discover304.top/2024/02/05/2024q1/180-2/"/>
    <id>https://discover304.top/2024/02/05/2024q1/180-2/</id>
    <published>2024-02-05T05:21:56.000Z</published>
    <updated>2024-04-20T19:03:48.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Basic-Assumptions-for-Efficient-Model-Representation"><a href="#Basic-Assumptions-for-Efficient-Model-Representation" class="headerlink" title="Basic Assumptions for Efficient Model Representation"></a>Basic Assumptions for Efficient Model Representation</h2><ul><li>Independence: limit the <strong>number</strong> of interaction.</li><li>Interaction: restrict the <strong>way</strong> things interact with each other.</li></ul><h2 id="Independence-assumptions"><a href="#Independence-assumptions" class="headerlink" title="Independence assumptions"></a>Independence assumptions</h2><hr><blockquote><p><strong>🍀后记🍀</strong><br>Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Basic-Assumptions-for-Efficient-Model-Representation&quot;&gt;&lt;a href=&quot;#Basic-Assumptions-for-Efficient-Model-Representation&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="University" scheme="https://discover304.top/categories/University/"/>
    
    <category term="Natural Language Understanding, Generation, and Machine Translation" scheme="https://discover304.top/categories/University/Natural-Language-Understanding-Generation-and-Machine-Translation/"/>
    
    
    <category term="笔记" scheme="https://discover304.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>PMR Introduction &amp; Assumptions for Efficient Representation</title>
    <link href="https://discover304.top/2024/01/22/2024q1/181/"/>
    <id>https://discover304.top/2024/01/22/2024q1/181/</id>
    <published>2024-01-22T02:16:15.000Z</published>
    <updated>2024-03-10T01:04:08.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Course-Structure"><a href="#1-Course-Structure" class="headerlink" title="1. Course Structure"></a>1. Course Structure</h2><p>Assumptions with reasons and learning&#x2F;reasoning.</p><blockquote><p>Half half.</p></blockquote><p><img src="https://image.discover304.top/s06100201222024.png" alt="s06100201222024"><br><img src="https://image.discover304.top/s06101801222024.png" alt="s06101801222024"><br><img src="https://image.discover304.top/s06103701222024.png" alt="s06103701222024"></p><h2 id="2-Basic-Assumptions-for-Efficient-Model-Representation"><a href="#2-Basic-Assumptions-for-Efficient-Model-Representation" class="headerlink" title="2. Basic Assumptions for Efficient Model Representation"></a>2. Basic Assumptions for Efficient Model Representation</h2><ul><li>Independence: limit the <strong>number</strong> of interaction.</li><li>Interaction: restrict the <strong>way</strong> things interact with each other.</li></ul><h3 id="2-1-Independence"><a href="#2-1-Independence" class="headerlink" title="2.1. Independence"></a>2.1. Independence</h3><p><img src="https://image.discover304.top/s06154101222024.png" alt="s06154101222024"><br><img src="https://image.discover304.top/s06164401222024.png" alt="s06164401222024"><br><img src="https://image.discover304.top/s06302201222024.png" alt="s06302201222024"></p><h3 id="2-2-Interaction"><a href="#2-2-Interaction" class="headerlink" title="2.2. Interaction"></a>2.2. Interaction</h3><p><img src="https://image.discover304.top/s06310101222024.png" alt="s06310101222024"></p><h2 id="3-Additional-Material"><a href="#3-Additional-Material" class="headerlink" title="3. Additional Material"></a>3. Additional Material</h2><h3 id="3-1-Sensitivityu-and-Specificity"><a href="#3-1-Sensitivityu-and-Specificity" class="headerlink" title="3.1. Sensitivityu and Specificity"></a>3.1. Sensitivityu and Specificity</h3><ul><li>Sensitivity: True Positive</li><li>Specificity: True Negtive</li></ul><blockquote><p>Simply another way saying the same thing.</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/585001157">敏感性(Sensitivity)与特异性(Specificity)</a></p><h3 id="3-2-Bayes’-rule"><a href="#3-2-Bayes’-rule" class="headerlink" title="3.2. Bayes’ rule"></a>3.2. Bayes’ rule</h3><p>$$<br>P(A|B) &#x3D; \frac{P(B|A) \cdot P(A)}{P(B)}<br>$$</p><p>$$<br>P(y&#x3D;1|x&#x3D;1) &#x3D; \frac{P(x&#x3D;1|y&#x3D;1) \cdot P(y&#x3D;1)}{P(x&#x3D;1)}<br>$$</p><p><img src="https://image.discover304.top/s05580801222024.png" alt="s05580801222024"></p><hr><blockquote><p><strong>🍀后记🍀</strong><br>Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Course-Structure&quot;&gt;&lt;a href=&quot;#1-Course-Structure&quot; class=&quot;headerlink&quot; title=&quot;1. Course Structure&quot;&gt;&lt;/a&gt;1. Course Structure&lt;/h2&gt;&lt;p&gt;Assu</summary>
      
    
    
    
    <category term="University" scheme="https://discover304.top/categories/University/"/>
    
    <category term="Probabilistic Modelling and Reasoning" scheme="https://discover304.top/categories/University/Probabilistic-Modelling-and-Reasoning/"/>
    
    
    <category term="笔记" scheme="https://discover304.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>NLU Introduction</title>
    <link href="https://discover304.top/2024/01/15/2024q1/180/"/>
    <id>https://discover304.top/2024/01/15/2024q1/180/</id>
    <published>2024-01-15T02:16:15.000Z</published>
    <updated>2024-03-10T00:57:51.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Natural-Language-Understanding"><a href="#1-Natural-Language-Understanding" class="headerlink" title="1. Natural Language Understanding"></a>1. Natural Language Understanding</h2><p>Broadly: any computational problem where the input is natural language, and the output is structured information that a computer can store (e.g. in a database) or execute (e.g. a command to a digital assistant).</p><h3 id="1-1-Digital-Assistants"><a href="#1-1-Digital-Assistants" class="headerlink" title="1.1. Digital Assistants"></a>1.1. Digital Assistants</h3><p><img src="https://image.discover304.top/s02191301232024.png" alt="s02191301232024"></p><h3 id="1-2-Question-answering"><a href="#1-2-Question-answering" class="headerlink" title="1.2. Question answering"></a>1.2. Question answering</h3><p><img src="https://image.discover304.top/s02185001232024.png" alt="s02185001232024"></p><h3 id="1-3-Sentiment-analysis"><a href="#1-3-Sentiment-analysis" class="headerlink" title="1.3. Sentiment analysis"></a>1.3. Sentiment analysis</h3><p><img src="https://image.discover304.top/s02194401232024.png" alt="s02194401232024"></p><h3 id="1-4-Syntactic-parsing"><a href="#1-4-Syntactic-parsing" class="headerlink" title="1.4. Syntactic parsing"></a>1.4. Syntactic parsing</h3><p><img src="https://image.discover304.top/s02200401232024.png" alt="s02200401232024"></p><h3 id="1-5-Semantic-parsing"><a href="#1-5-Semantic-parsing" class="headerlink" title="1.5. Semantic parsing"></a>1.5. Semantic parsing</h3><p><img src="https://image.discover304.top/s02203701232024.png" alt="s02203701232024"></p><h2 id="2-Natural-Language-Generation"><a href="#2-Natural-Language-Generation" class="headerlink" title="2. Natural Language Generation"></a>2. Natural Language Generation</h2><p>Broadly: any computational problem where the input is non-linguistic data (e.g. data, images, sound) and the output is a natural language description of the input.</p><h3 id="2-1-Data-to-text-generation"><a href="#2-1-Data-to-text-generation" class="headerlink" title="2.1. Data-to-text generation"></a>2.1. Data-to-text generation</h3><p><img src="https://image.discover304.top/s02223401232024.png" alt="s02223401232024"></p><h3 id="2-2-Image-caption"><a href="#2-2-Image-caption" class="headerlink" title="2.2. Image caption"></a>2.2. Image caption</h3><p><img src="https://image.discover304.top/s02225001232024.png" alt="s02225001232024"></p><h2 id="3-Machine-Translation"><a href="#3-Machine-Translation" class="headerlink" title="3. Machine Translation"></a>3. Machine Translation</h2><p>Both input and output are text that convey the same meaning, but written in a different language or style.<br>Philosophically and technically, machine translation requires both NLU and NLG.</p><h3 id="3-1-Language-Translation"><a href="#3-1-Language-Translation" class="headerlink" title="3.1. Language Translation"></a>3.1. Language Translation</h3><p><img src="https://image.discover304.top/s02243301232024.png" alt="s02243301232024"></p><h3 id="3-2-Text-simplification"><a href="#3-2-Text-simplification" class="headerlink" title="3.2. Text simplification"></a>3.2. Text simplification</h3><p><img src="https://image.discover304.top/s02244401232024.png" alt="s02244401232024"></p><h3 id="3-3-Summarization"><a href="#3-3-Summarization" class="headerlink" title="3.3. Summarization"></a>3.3. Summarization</h3><p><img src="https://image.discover304.top/s02252801232024.png" alt="s02252801232024"></p><h2 id="4-About-Deep-Learning-in-NLP"><a href="#4-About-Deep-Learning-in-NLP" class="headerlink" title="4. About Deep Learning in NLP"></a>4. About Deep Learning in NLP</h2><h3 id="4-1-Idea-Deep-learning-simplifies-machine-learning"><a href="#4-1-Idea-Deep-learning-simplifies-machine-learning" class="headerlink" title="4.1. Idea: Deep learning simplifies machine learning"></a>4.1. Idea: Deep learning simplifies machine learning</h3><p>Why has deep learning taken over NLP?</p><ul><li>Deep learning simplifies the design of probabilistic models, by replacing complex dependencies and independence assumptions with universal function approximators.</li><li>Deep learning gives us representation learning: data representations are learned rather than engineered.</li><li>Learned representations are easy to obtain and reusable, enabling multi-task learning.</li><li>Deep learning provides a uniform, flexible, trainable framework that can easily mix and match different data types: strings, labels, trees, graphs, data, and images.</li></ul><p>In short: deep learning solves the difficulties of applying machine learning to NLP… But it does not solve NLP!</p><h3 id="4-2-Problem-Deep-learning-technology-is-energy-intensive"><a href="#4-2-Problem-Deep-learning-technology-is-energy-intensive" class="headerlink" title="4.2. Problem: Deep learning technology is energy intensive"></a>4.2. Problem: Deep learning technology is energy intensive</h3><p><img src="https://image.discover304.top/s02333901232024.png" alt="s02333901232024"></p><h3 id="4-3-Problem-Ethical-practice-lags-technical-practice"><a href="#4-3-Problem-Ethical-practice-lags-technical-practice" class="headerlink" title="4.3. Problem: Ethical practice lags technical practice"></a>4.3. Problem: Ethical practice lags technical practice</h3><p>Modern NLP originated in laboratory experiments with machine learning methods on linguistically annotated text. But NLP has escaped the lab, and can have a direct effect on people’s lives</p><p>There are many wider ethical concerns about ML&#x2F;data science, e.g., privacy. We’ll focus on NLP in the course, but specific problems in NLP often reflect more general problems.</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Natural-Language-Understanding&quot;&gt;&lt;a href=&quot;#1-Natural-Language-Understanding&quot; class=&quot;headerlink&quot; title=&quot;1. Natural Language Understa</summary>
      
    
    
    
    <category term="University" scheme="https://discover304.top/categories/University/"/>
    
    <category term="Natural Language Understanding, Generation, and Machine Translation" scheme="https://discover304.top/categories/University/Natural-Language-Understanding-Generation-and-Machine-Translation/"/>
    
    
    <category term="笔记" scheme="https://discover304.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>178-Nginx-Https-to-Local-Service</title>
    <link href="https://discover304.top/2023/12/22/2023q4/178-nginx-https-to-local-service/"/>
    <id>https://discover304.top/2023/12/22/2023q4/178-nginx-https-to-local-service/</id>
    <published>2023-12-22T10:09:00.000Z</published>
    <updated>2024-08-19T20:37:52.398Z</updated>
    
    <content type="html"><![CDATA[<p>this is a note about how I open another service in the same server for my diary system</p><hr><blockquote><p><strong>🍀后记🍀</strong><br>Hello米娜桑，这里是英国留学中的杨丝儿。我的博客的关键词集中在编程、算法、机器人、人工智能、数学等等，持续高质量输出中。<br><strong>🌸唠嗑QQ群</strong>：<a href="https://jq.qq.com/?_wv=1027&k=EaGddTQg">兔叽の魔术工房</a> (942848525)<br><strong>⭐B站账号</strong>：<a href="https://space.bilibili.com/98639326">白拾Official</a>（活跃于知识区和动画区）<br><strong>✨GitHub主页</strong>：<a href="https://github.com/YangSierCode000">YangSierCode000</a>(工程文件)<br><strong>⛳Discord社区</strong>：<a href="https://discord.gg/nn5NDXMgae">AIerLab</a>（科研社区，欢迎来玩）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;this is a note about how I open another service in the same server for my diary system&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;🍀后记🍀&lt;/strong&gt;&lt;b</summary>
      
    
    
    
    <category term="Draft" scheme="https://discover304.top/categories/Draft/"/>
    
    
    <category term="待更新" scheme="https://discover304.top/tags/%E5%BE%85%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
</feed>
